var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),r=(a,t)=>a.repeat(t),o=Promise,c=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=a=>Array.isArray(a),d=(a,t,e)=>a.slice(t,e),f=a=>a.length,g=async a=>o.all(a),p="_",E="_id",m=a=>`"${a.replace(/"/g,'""')}"`,v="SELECT",T=(a,t="")=>a.join(t),h=(a,t)=>a.map(t),C=a=>0==f(a),b=(a,t)=>a.filter(t),A=(a,...t)=>a.push(...t),N=(a,t)=>a?.has(t)??!1,O=a=>[...a?.values()??[]],R=(a,t)=>a?.delete(t),S=Object,L=a=>S.getPrototypeOf(a),D=S.entries,I=S.keys,P=S.freeze,M=(a=[])=>S.fromEntries(a),_=(...a)=>S.assign({},...a),F=(a,t)=>t in a,x=(a,t)=>h(D(a),(([a,e])=>t(e,a))),j=a=>S.values(a),B=a=>f(I(a)),H=a=>(a=>!l(a)&&y(L(a),(a=>a==S.prototype||l(L(a))),(()=>!0)))(a)&&0==B(a),Y=a=>new Map(a),$=a=>[...a?.keys()??[]],k=(a,t)=>a?.get(t),G=(a,t)=>h([...a?.entries()??[]],(([a,e])=>t(e,a))),J=(a,t,e)=>l(e)?(R(a,t),a):a?.set(t,e),U=(a,t,e,n)=>(N(a,t)||J(a,t,e()),k(a,t)),W=(a,t,e,n=J)=>(x(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>F(t,e)?0:n(a,e))),a),z=a=>new Set(u(a)||l(a)?a:[a]),K=(a,t)=>a?.add(t),V="TABLE",q="ALTER "+V,Q="DELETE FROM",X=v+"*FROM",Z="FROM pragma_table_",aa="WHERE",ta=(a,t,e,i)=>{const r=Y();return[async()=>W(r,M(await g(h(await a("SELECT name "+Z+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+na(t)+")ORDER BY name",t),(async({name:t})=>[t,M(h(await a(v+" name,type "+Z+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>J(r,t,W(U(r,t,Y),e,((a,t,e)=>{e!=k(a,t)&&J(a,t,e)}),((a,t)=>J(a,t))))),((a,t)=>J(r,t))),async(t,e)=>((a,t)=>!l(k(k(r,a),t)))(t,e)?M(b(h(await a(X+m(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!H(t)))):{},async(t,e,o,c,y,w=!1)=>{const u=z();x(o??{},(a=>h(I(a??{}),(a=>K(u,a)))));const d=O(u);if(!w&&y&&C(d)&&N(r,t))return await a("DROP "+V+m(t)),void J(r,t);if(C(d)||N(r,t)){const s=k(r,t),i=z($(s));await g([...h(d,(async e=>{R(i,e)||(await a(q+m(t)+"ADD"+m(e)),J(s,e,n))})),...!w&&c?h(O(i),(async n=>{n!=e&&(await a(q+m(t)+"DROP"+m(n)),J(s,n))})):[]])}else await a("CREATE "+V+m(t)+"("+m(e)+` PRIMARY KEY ON CONFLICT REPLACE${T(h(d,(a=>s+m(a))))});`),J(r,t,Y([[e,n],...h(d,(a=>[a,n]))]));if(w)l(o)?await a(Q+m(t)+aa+" 1"):await g(x(o,(async(n,s)=>{l(n)?await a(Q+m(t)+aa+m(e)+"=?",[s]):C(d)||await ea(a,t,e,I(n),[s,...j(n)],i)})));else if(C(d))N(r,t)&&await a(Q+m(t)+aa+" 1");else{const n=b($(k(r,t)),(a=>a!=e)),s=[],c=[];x(o??{},((a,t)=>{A(s,t,...h(n,(t=>a?.[t]))),A(c,t)})),await ea(a,t,e,n,s,i),await a(Q+m(t)+aa+m(e)+"NOT IN("+na(c)+")",c)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ea=async(a,t,e,i,o,c=!0)=>await a("INSERT "+(c?n:"OR REPLACE ")+"INTO"+m(t)+"("+m(e)+T(h(i,(a=>s+m(a))))+")VALUES"+d(r(`,(?${r(",?",f(i))})`,f(o)/(f(i)+1)),1)+(c?"ON CONFLICT("+m(e)+")DO UPDATE SET"+T(h(i,(a=>m(a)+"=excluded."+m(a))),s):n),h(o,(a=>a??null))),na=a=>T(h(a,(()=>"?")),s),sa=JSON.parse,ia=Y(),ra=Y(),oa=(a,t,e,n,s,i,r,o={},c=[])=>{let w,d,f,g=0;U(ia,c,(()=>0)),U(ra,c,(()=>[]));const[p,E,m,v,T]=((a=1,t)=>a>1&&"getMergeableContent"in t?[1,t.getMergeableContent,t.getTransactionMergeableChanges,([[a],[t]])=>!H(a)||!H(t),t.setDefaultContent]:2!=a?[0,t.getContent,t.getTransactionChanges,([a,t])=>!H(a)||!H(t),t.setContent]:0)(r,a),h=t=>{(p&&u(t?.[0])?1===t?.[2]?a.applyMergeableChanges:a.setMergeableContent:1===t?.[2]?a.applyChanges:a.setContent)(t)},C=async a=>(2!=g&&(g=1,await R((async()=>{try{h(await t())}catch(t){i?.(t),a&&T(a)}g=0}))),S),b=()=>(d&&(s(d),d=void 0),S),N=async a=>(1!=g&&(g=2,await R((async()=>{try{await e(E,a)}catch(a){i?.(a)}g=0}))),S),O=()=>(y(f,a.delListener),f=void 0,S),R=async(...a)=>(A(k(ra,c),...a),await(async()=>{if(!k(ia,c)){for(J(ia,c,1);!l((a=k(ra,c),w=a.shift()));)try{await w()}catch(a){i?.(a)}J(ia,c,0)}var a})(),S),S={load:C,startAutoLoad:async a=>(await b().load(a),d=n((async(a,t)=>{t||a?2!=g&&(g=1,h(t??a),g=0):await C()})),S),stopAutoLoad:b,isAutoLoading:()=>!l(d),save:N,startAutoSave:async()=>(await O().save(),f=a.addDidFinishTransactionListener((()=>{const a=m();v(a)&&N(a)})),S),stopAutoSave:O,isAutoSaving:()=>!l(f),schedule:R,getStore:()=>a,destroy:()=>b().stopAutoSave(),getStats:()=>({}),...o};return P(S)},ca="store",la=(a,t,e,n,s,[i],r,o,c,l)=>{const[y,w,u,d]=ta(t,r,s,l);return oa(a,(async()=>await d((async()=>(await y(),sa((await w(i,E))[p]?.[ca]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,E,{[p]:{[ca]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?S.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,1,{[c]:()=>o},o)},ya=(a,t,e,n,s,[i,r,[o,c,y]],w,u,d,f)=>{const[m,v,T,h]=ta(t,w,s,f),C=async(a,t)=>await g(G(r,(async([e,n,s,i],r)=>{t&&!F(a,r)||await T(e,n,a[r],s,i,t)}))),A=async(a,t)=>c?await T(y,E,{[p]:a},!0,!0,t):null;return oa(a,(async()=>await h((async()=>{await m();const a=await(async()=>M(b(await g(G(i,(async([a,t],e)=>[a,await v(e,t)]))),(a=>!H(a[1])))))(),t=await(async()=>o?(await v(y,E))[p]:{})();return H(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await h((async()=>{if(await m(),l(t)){const[t,e]=a();await C(t),await A(e)}else await C(t[0],!0),await A(t[1],!0)}))),e,n,s,1,{[d]:()=>u},u)},wa="json",ua="autoLoadIntervalSeconds",da="rowIdColumnName",fa="tableId",ga="tableName",pa={mode:wa,[ua]:1},Ea={load:0,save:0,[ga]:e+"_values"},ma=(a,t,e,n)=>{const s=Y();return x(a,((a,i)=>{const r=d(j(_(t,w(a)?{[e]:a}:a)),0,B(t));l(r[0])||n(i,r[0])||J(s,i,r)})),s},va="pragma ",Ta="data_version",ha="schema_version",Ca=(a,t,n,s,i,r,o,l,y="getDb",u)=>{let f,g,p;const[m,T,h,C]=(a=>{const t=(a=>_(pa,w(a)?{storeTableName:a}:a??{}))(a),n=t[ua];if(t.mode==wa){const{storeTableName:a=e}=t;return[1,n,[a],z(a)]}const{tables:{load:s={},save:i={}}={},values:r={}}=t,o=d(j(_(Ea,r)),0,B(Ea)),c=o[2],l=z(c);return[0,n,[ma(s,{[fa]:null,[da]:E},fa,(a=>K(l,a)&&a==c)),ma(i,{[ga]:null,[da]:E,deleteEmptyColumns:0,deleteEmptyTable:0},ga,((a,t)=>K(l,t)&&t==c)),o],l]})(t);return(m?la:ya)(a,r?async(a,t)=>(r(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(va+Ta))[0][Ta],e=(await n(va+ha))[0][ha],s=(await n(v+" TOTAL_CHANGES() c"))[0].c;t==(f??=t)&&e==(g??=e)&&s==(p??=s)||(a(),f=t,g=e)}catch{}},e=T,t(),setInterval(t,1e3*e)),s((t=>C.has(t)?a():0))];var t,e}),(([a,t])=>{c(a),f=g=null,i(t)}),o,h,O(C),l,y,u)};a.createPowerSyncPersister=(a,t,e,n,s,i=!1)=>Ca(a,e,(async(a,e=[])=>t.execute(a,e).then((a=>a.rows?._array??[]))),(a=>{const e=new AbortController,n=t.onChange({rawTableNames:!0,signal:e.signal});return(async()=>{for await(const t of n)h(t.changedTables,a)})(),e}),(a=>a.abort()),n,s,t,"getPowerSync",i)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterPowersync={});
