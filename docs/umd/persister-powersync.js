var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),r=Promise,c=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,p=async a=>r.all(a),f="_",g="_id",E=a=>`"${a.replace(/"/g,'""')}"`,h="SELECT",m=(a,t="")=>a.join(t),v=(a,t)=>a.map(t),C=a=>0==d(a),T=(a,t)=>a.filter(t),b=(a,...t)=>a.push(...t),A=(a,t)=>a?.has(t)??!1,N=a=>[...a?.values()??[]],O=(a,t)=>a?.delete(t),L=Object,R=a=>L.getPrototypeOf(a),S=L.entries,D=L.keys,I=L.freeze,P=(a=[])=>L.fromEntries(a),M=(...a)=>L.assign({},...a),_=(a,t)=>t in a,F=(a,t)=>v(S(a),(([a,e])=>t(e,a))),x=a=>L.values(a),j=a=>d(D(a)),B=a=>(a=>!l(a)&&y(R(a),(a=>a==L.prototype||l(R(a))),(()=>!0)))(a)&&0==j(a),H=a=>new Map(a),Y=a=>[...a?.keys()??[]],$=(a,t)=>a?.get(t),k=(a,t)=>v([...a?.entries()??[]],(([a,e])=>t(e,a))),G=(a,t,e)=>l(e)?(O(a,t),a):a?.set(t,e),J=(a,t,e)=>(A(a,t)||G(a,t,e()),$(a,t)),U=(a,t,e,n=G)=>(F(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>_(t,e)?0:n(a,e))),a),W=a=>new Set(Array.isArray(a)||l(a)?a:[a]),z=(a,t)=>a?.add(t),K="TABLE",V="ALTER "+K,q="DELETE FROM",Q=h+"*FROM",X="FROM pragma_table_",Z="WHERE",aa=(a,t,e,i)=>{const o=H();return[async()=>U(o,P(await p(v(await a("SELECT name "+X+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+ea(t)+")ORDER BY name",t),(async({name:t})=>[t,P(v(await a(h+" name,type "+X+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>G(o,t,U(J(o,t,H),e,((a,t,e)=>{e!=$(a,t)&&G(a,t,e)}),((a,t)=>G(a,t))))),((a,t)=>G(o,t))),async(t,e)=>((a,t)=>!l($($(o,a),t)))(t,e)?P(T(v(await a(Q+E(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,r,c,y,w=!1)=>{const u=W();F(r??{},(a=>v(D(a??{}),(a=>z(u,a)))));const d=N(u);if(!w&&y&&C(d)&&A(o,t))return await a("DROP "+K+E(t)),void G(o,t);if(C(d)||A(o,t)){const s=$(o,t),i=W(Y(s));await p([...v(d,(async e=>{O(i,e)||(await a(V+E(t)+"ADD"+E(e)),G(s,e,n))})),...!w&&c?v(N(i),(async n=>{n!=e&&(await a(V+E(t)+"DROP"+E(n)),G(s,n))})):[]])}else await a("CREATE "+K+E(t)+"("+E(e)+` PRIMARY KEY ON CONFLICT REPLACE${m(v(d,(a=>s+E(a))))});`),G(o,t,H([[e,n],...v(d,(a=>[a,n]))]));if(w)l(r)?await a(q+E(t)+Z+" 1"):await p(F(r,(async(n,s)=>{l(n)?await a(q+E(t)+Z+E(e)+"=?",[s]):C(d)||await ta(a,t,e,D(n),[s,...x(n)],i)})));else if(C(d))A(o,t)&&await a(q+E(t)+Z+" 1");else{const n=T(Y($(o,t)),(a=>a!=e)),s=[],c=[];F(r??{},((a,t)=>{b(s,t,...v(n,(t=>a?.[t]))),b(c,t)})),await ta(a,t,e,n,s,i),await a(q+E(t)+Z+E(e)+"NOT IN("+ea(c)+")",c)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ta=async(a,t,e,i,r,c=!0)=>await a("INSERT "+(c?n:"OR REPLACE ")+"INTO"+E(t)+"("+E(e)+m(v(i,(a=>s+E(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(r)/(d(i)+1)),1)+(c?"ON CONFLICT("+E(e)+")DO UPDATE SET"+m(v(i,(a=>E(a)+"=excluded."+E(a))),s):n),v(r,(a=>a??null))),ea=a=>m(v(a,(()=>"?")),s),na=JSON.parse,sa=H(),ia=H(),oa=a=>w(a?.[0]),ra=(a,t,e,n,s,i,o,[r,c]=[],w=[])=>{let u,d,p,f=0,g=0;J(sa,w,(()=>0)),J(ia,w,(()=>[]));const[E,h,m,v]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!B(a)||!B(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!B(a)||!B(t)])(o,a),C=async a=>(2!=f&&(f=1,await T.schedule((async()=>{await a(),f=0}))),T),T={load:async(e,n)=>await C((async()=>{try{const e=await t();(E&&oa(e)?a.setMergeableContent:a.setContent)(e)}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(T.stopAutoLoad(),await T.load(e,s),g=1,p=n((async(e,n)=>{if(n){const t=n();await C((async()=>(E&&oa(t)?a.applyMergeableChanges:a.applyChanges)(t)))}else await C((async()=>{try{const n=e?.()??await t();(E&&oa(n)?a.setMergeableContent:a.setContent)(n)}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(g&&(s(p),p=void 0,g=0),T),save:async a=>(1!=f&&(f=2,await T.schedule((async()=>{try{await e(h,a)}catch(a){i?.(a)}f=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),u=a.addDidFinishTransactionListener((()=>{const a=m();v(a)&&T.save((()=>a))})),T),stopAutoSave:()=>(y(u,a.delListener),u=void 0,T),schedule:async(...a)=>(b($(ia,w),...a),await(async()=>{if(!$(sa,w)){for(G(sa,w,1);!l((a=$(ia,w),d=a.shift()));)try{await d()}catch(a){i?.(a)}G(sa,w,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return r&&(T[r]=()=>c),I(T)},ca="store",la=(a,t,e,n,s,[i],o,r,c,l)=>{const[y,w,u,d]=aa(t,o,s,l);return ra(a,(async()=>await d((async()=>(await y(),na((await w(i,g))[f]?.[ca]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,g,{[f]:{[ca]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?L.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,[c,r],r)},ya=(a,t,e,n,s,[i,o,[r,c,y]],w,u,d,E)=>{const[h,m,v,C]=aa(t,w,s,E),b=async(a,t)=>await p(k(o,(async([e,n,s,i],o)=>{t&&!_(a,o)||await v(e,n,a[o],s,i,t)}))),A=async(a,t)=>c?await v(y,g,{[f]:a},!0,!0,t):null;return ra(a,(async()=>await C((async()=>{await h();const a=await(async()=>P(T(await p(k(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>r?(await m(y,g))[f]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await C((async()=>{if(await h(),l(t)){const[t,e]=a();await b(t),await A(e)}else{const[a,e]=t();await b(a,!0),await A(e,!0)}}))),e,n,s,!1,[d,u],u)},wa="json",ua="autoLoadIntervalSeconds",da="rowIdColumnName",pa="tableId",fa="tableName",ga={mode:wa,[ua]:1},Ea={load:0,save:0,[fa]:e+"_values"},ha=(a,t,e,n)=>{const s=H();return F(a,((a,i)=>{const o=u(x(M(t,w(a)?{[e]:a}:a)),0,j(t));l(o[0])||n(i,o[0])||G(s,i,o)})),s},ma="pragma ",va="data_version",Ca="schema_version",Ta=(a,t,n,s,i,o,r,l,y="getDb",d)=>{let p,f,E;const[m,v,C,T]=(a=>{const t=(a=>M(ga,w(a)?{storeTableName:a}:a??{}))(a),n=t[ua];if(t.mode==wa){const{storeTableName:a=e}=t;return[1,n,[a],W(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,r=u(x(M(Ea,o)),0,j(Ea)),c=r[2],l=W(c);return[0,n,[ha(s,{[pa]:null,[da]:g},pa,(a=>z(l,a)&&a==c)),ha(i,{[fa]:null,[da]:g,deleteEmptyColumns:0,deleteEmptyTable:0},fa,((a,t)=>z(l,t)&&t==c)),r],l]})(t);return(m?la:ya)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(ma+va))[0][va],e=(await n(ma+Ca))[0][Ca],s=(await n(h+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&e==(f??=e)&&s==(E??=s)||(a(),p=t,f=e)}catch{}},e=v,t(),setInterval(t,1e3*e)),s((t=>T.has(t)?a():0))];var t,e}),(([a,t])=>{c(a),p=f=null,i(t)}),r,C,N(T),l,y,d)};a.createPowerSyncPersister=(a,t,e,n,s,i=!1)=>Ta(a,e,(async(a,e=[])=>t.execute(a,e).then((a=>a.rows?._array??[]))),(a=>{const e=new AbortController,n=t.onChange({rawTableNames:!0,signal:e.signal});return(async()=>{for await(const t of n)v(t.changedTables,a)})(),e}),(a=>a.abort()),n,s,t,"getPowerSync",i)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterPowersync={});
