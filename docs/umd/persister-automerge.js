var t,e;t=this,e=function(t){"use strict";const e=t=>t.length,a=t=>null==t,n=(t,e,n)=>a(t)?n?.():e(t),o=Object,s=o.keys,r=o.freeze,i=(t,e)=>n(t,(t=>t[e])),c=(t,e)=>!a(i(t,e)),d=(t,e)=>delete t[e],u=(t,e)=>((t,e)=>t.map(e))(o.entries(t),(([t,a])=>e(a,t))),y=t=>{return(t=>t instanceof o&&t.constructor==o)(t)&&(a=s(t),0==e(a));var a},l=(t,e)=>[t[e].t,t[e].v],f=(t,e,n,o)=>{const s=a(e)?t:((t,e,a)=>(c(t,e)||(t[e]={}),t[e]))(t,e);let r;return u(n,((t,e)=>{o(s,e,t)&&(r=1)})),u(s,((t,e)=>{c(n,e)||(d(s,e),r=1)})),!a(e)&&y(s)&&d(t,e),r};t.createAutomergePersister=(t,o,c="tinybase")=>(o.change((t=>t[c]={})),((t,e,s,v,p)=>{let g,h,A=0,w=!1;const L=async t=>{2!=A&&(A=1,await t(),A=0)},m={load:async(a={},n={})=>(await L((async()=>{let o;try{o=await e()}catch{}t.setContent(o??[a,n])})),m),startAutoLoad:async(a={},n={})=>(m.stopAutoLoad(),await m.load(a,n),w=!0,h=(a=>{const n=({doc:a})=>(async(a,n)=>{await L((async()=>{if(n)t.setTransactionChanges(n());else try{t.setContent(a?.()??await e())}catch{}}))})((()=>l(a,c)));return o.on("change",n),n})(),m),stopAutoLoad:()=>{return w&&(t=h,o.removeListener("change",t),h=void 0,w=!1),m;var t},save:async e=>(1!=A&&(A=2,await(async(t,e)=>{o.change((o=>((t,e,o,s)=>{((t,e)=>{y(t[e])&&(t[e]={t:{},v:{}})})(t,e);const[r,c]=l(t,e),v=()=>{p=1};let p=1;if(n(s?.(),(([t,e])=>{p=0,u(t,((t,e)=>p?0:a(t)?d(r,e):n(r[e],(e=>u(t,((t,o)=>p?0:a(t)?d(e,o):n(i(e,o),(e=>u(t,((t,n)=>a(t)?d(e,n):e[n]=t))),v)))),v))),u(e,((t,e)=>p?0:a(t)?d(c,e):c[e]=t))})),p){const[t,e]=o();f(r,void 0,t,((t,e,a)=>f(r,e,a,((t,e,a)=>f(t,e,a,((t,e,a)=>{if(i(t,e)!==a)return t[e]=a,1})))))),f(c,void 0,e,((t,e,a)=>{i(c,e)!==a&&(c[e]=a)}))}})(o,c,t,e)))})(t.getContent,e),A=0),m),startAutoSave:async()=>(await m.stopAutoSave().save(),g=t.addDidFinishTransactionListener(((t,e)=>m.save(e))),m),stopAutoSave:()=>(n(g,t.delListener),m),getStore:()=>t,destroy:()=>m.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return r(m)})(t,(async()=>2==e(s(o.doc[c]))?l(o.doc,c):void 0)))},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterAutomerge={});
