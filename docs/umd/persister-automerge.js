var e,t;e=this,t=function(e){"use strict";const t=e=>typeof e,a=t(""),n=e=>null==e,s=(e,t,a)=>n(e)?a?.():t(e),o=Object,r=e=>o.getPrototypeOf(e),c=o.entries,i=o.keys,d=o.freeze,y=(e,t)=>s(e,(e=>e[t])),l=(e,t)=>t in e,g=(e,t)=>(delete e[t],e),u=(e,t)=>((e,t)=>e.map(t))(c(e),(([e,a])=>t(a,e))),p=e=>i(e).length,h=e=>(e=>!n(e)&&s(r(e),(e=>e==o.prototype||n(r(e))),(()=>!0)))(e)&&0==p(e),f=e=>new Map(e),v=(e,t)=>e?.get(t),w=(e,t,a)=>{return n(a)?(s=e,o=t,s?.delete(o),e):e?.set(t,a);var s,o},C=(e,t,a)=>{var n,s;return n=e,s=t,n?.has(s)||w(e,t,a()),v(e,t)},b=f(),A=f(),L=e=>{return n=e?.[0],t(n)==a;var n},M=(e,t)=>[e[t].t,e[t].v],m=(e,t,a,s)=>{const o=n(t)?e:((e,t,a)=>(l(e,t)||(e[t]={}),e[t]))(e,t);let r;return u(a,((e,t)=>{s(o,t,e)&&(r=1)})),u(o,((e,t)=>{l(a,t)||(g(o,t),r=1)})),!n(t)&&h(o)&&g(e,t),r};e.createAutomergePersister=(e,t,a="tinybase",o)=>(t.change((e=>e[a]={})),((e,t,a,o,r,c,i,[y,l]=[],g=[])=>{let u,p,f,M=0,m=0;C(b,g,(()=>0)),C(A,g,(()=>[]));const[S,T,x,P]=((e,t)=>!e||n(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([e,t])=>!h(e)||!h(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,e],[,t]]])=>!h(e)||!h(t)])(i,e),j=async e=>(2!=M&&(M=1,await D.schedule((async()=>{await e(),M=0}))),D),D={load:async(a,n)=>await j((async()=>{try{const a=await t();(S&&L(a)?e.setMergeableContent:e.setContent)(a)}catch{e.setContent([a,n])}})),startAutoLoad:async(a={},n={})=>(D.stopAutoLoad(),await D.load(a,n),m=1,f=o((async(a,n)=>{if(n){const t=n();await j((async()=>(S&&L(t)?e.applyMergeableChanges:e.applyChanges)(t)))}else await j((async()=>{try{const n=a?.()??await t();(S&&L(n)?e.setMergeableContent:e.setContent)(n)}catch(e){c?.(e)}}))})),D),stopAutoLoad:()=>(m&&(r(f),f=void 0,m=0),D),save:async e=>(1!=M&&(M=2,await D.schedule((async()=>{try{await a(T,e)}catch(e){c?.(e)}M=0}))),D),startAutoSave:async()=>(await D.stopAutoSave().save(),u=e.addDidFinishTransactionListener((()=>{const e=x();P(e)&&D.save((()=>e))})),D),stopAutoSave:()=>(s(u,e.delListener),u=void 0,D),schedule:async(...e)=>(((e,...t)=>{e.push(...t)})(v(A,g),...e),await(async()=>{if(!v(b,g)){for(w(b,g,1);!n((e=v(A,g),p=e.shift()));)try{await p()}catch(e){c?.(e)}w(b,g,0)}var e})(),D),getStore:()=>e,destroy:()=>D.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return y&&(D[y]=()=>l),d(D)})(e,(async()=>{const e=await t.doc();return 2==p(e[a])?M(e,a):void 0}),(async(e,o)=>t.change((t=>((e,t,a,o)=>{((e,t)=>{h(e[t])&&(e[t]={t:{},v:{}})})(e,t);const[r,c]=M(e,t),i=()=>{d=1};let d=1;if(s(o?.(),(([e,t])=>{d=0,u(e,((e,t)=>d?0:n(e)?g(r,t):s(r[t],(t=>u(e,((e,a)=>d?0:n(e)?g(t,a):s(y(t,a),(t=>u(e,((e,a)=>n(e)?g(t,a):t[a]=e))),i)))),i))),u(t,((e,t)=>d?0:n(e)?g(c,t):c[t]=e))})),d){const[e,t]=a();m(r,void 0,e,((e,t,a)=>m(r,t,a,((e,t,a)=>m(e,t,a,((e,t,a)=>{if(y(e,t)!==a)return e[t]=a,1})))))),m(c,void 0,t,((e,t,a)=>{y(c,t)!==a&&(c[t]=a)}))}})(t,a,e,o)))),(e=>{const n=({doc:t})=>e((()=>M(t,a)));return t.on("change",n),n}),(e=>{t.removeListener("change",e)}),o,!1,["getDocHandle",t]))},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).TinyBasePersisterAutomerge={});
