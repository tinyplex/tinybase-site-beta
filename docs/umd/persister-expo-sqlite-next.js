var a,t;a=this,t=function(a,t){"use strict";const e=a=>typeof a,s="tinybase",n="",i=",",o=e(n),c=(a,t)=>a.repeat(t),r=Promise,l=clearInterval,y=a=>null==a,w=(a,t,e)=>y(a)?e?.():t(a),E=a=>e(a)==o,d=(a,t,e)=>a.slice(t,e),u=a=>a.length,p=async a=>r.all(a),f="_",v="_id",T=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",A=(a,t="")=>a.join(t),L=(a,t)=>a.map(t),R=a=>0==u(a),h=(a,t)=>a.filter(t),N=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,C=a=>[...a?.values()??[]],S=(a,t)=>a?.delete(t),g=Object,D=a=>g.getPrototypeOf(a),b=g.entries,x=g.keys,I=g.freeze,P=(a=[])=>g.fromEntries(a),F=(...a)=>g.assign({},...a),M=(a,t)=>L(b(a),(([a,e])=>t(e,a))),$=a=>g.values(a),_=a=>u(x(a)),B=a=>(a=>!y(a)&&w(D(a),(a=>a==g.prototype||y(D(a))),(()=>!0)))(a)&&0==_(a),q=a=>new Map(a),H=a=>[...a?.keys()??[]],j=(a,t)=>a?.get(t),W=(a,t)=>L([...a?.entries()??[]],(([a,e])=>t(e,a))),Y=(a,t,e)=>y(e)?(S(a,t),a):a?.set(t,e),k=(a,t,e)=>(O(a,t)||Y(a,t,e()),j(a,t)),G=(a,t,e,s=Y)=>(M(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!y(((a,t)=>w(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),J=a=>new Set(Array.isArray(a)||y(a)?a:[a]),U=(a,t)=>a?.add(t),z=m+"*FROM",K="FROM pragma_table_",V="WHERE",Q=(a,t,e,s)=>{const o=q();return[async()=>G(o,P(await p(L(await a("SELECT name "+K+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+Z(t)+")ORDER BY name",t),(async({name:t})=>[t,P(L(await a(m+" name,type "+K+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>Y(o,t,G(k(o,t,q),e,((a,t,e)=>{e!=j(a,t)&&Y(a,t,e)}),((a,t)=>Y(a,t))))),((a,t)=>Y(o,t))),async(t,e)=>((a,t)=>!y(j(j(o,a),t)))(t,e)?P(h(L(await a(z+T(t)),(a=>{return[a[e],(t={...a},s=e,delete t[s],t)];var t,s})),(([a,t])=>!y(a)&&!B(t)))):{},async(t,e,c,r,l,w=!1)=>{const E=J();M(c??{},(a=>L(x(a??{}),(a=>U(E,a)))));const d=C(E);if(!w&&l&&R(d)&&O(o,t))return await a("DROP TABLE"+T(t)),void Y(o,t);if(R(d)||O(o,t)){const s=j(o,t),i=J(H(s));await p([...L(d,(async e=>{S(i,e)||(await a(`ALTER TABLE${T(t)}ADD${T(e)}`),Y(s,e,n))})),...!w&&r?L(C(i),(async n=>{n!=e&&(await a(`ALTER TABLE${T(t)}DROP${T(n)}`),Y(s,n))})):[]])}else await a(`CREATE TABLE${T(t)}(${T(e)} PRIMARY KEY ON CONFLICT REPLACE${A(L(d,(a=>i+T(a))))});`),Y(o,t,q([[e,n],...L(d,(a=>[a,n]))]));if(w)y(c)?await a("DELETE FROM"+T(t)+"WHERE 1"):await p(M(c,(async(n,i)=>{y(n)?await a("DELETE FROM"+T(t)+V+T(e)+"=?",[i]):R(d)||await X(a,t,e,x(n),[i,...$(n)],s)})));else if(R(d))O(o,t)&&await a("DELETE FROM"+T(t)+"WHERE 1");else{const s=h(H(j(o,t)),(a=>a!=e)),n=[],i=[];M(c??{},((a,t)=>{N(n,t,...L(s,(t=>a?.[t]))),N(i,t)})),await X(a,t,e,s,n),await a("DELETE FROM"+T(t)+V+T(e)+"NOT IN("+Z(i)+")",i)}},async t=>{let s;await a("BEGIN");try{s=await t()}catch(a){e?.(a)}return await a("END"),s}]},X=async(a,t,e,s,o,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+T(t)+"("+T(e)+A(L(s,(a=>i+T(a))))+")VALUES"+d(c(`,(?${c(",?",u(s))})`,u(o)/(u(s)+1)),1)+(r?"ON CONFLICT("+T(e)+")DO UPDATE SET"+A(L(s,(a=>T(a)+"=excluded."+T(a))),i):n),o),Z=a=>A(L(a,(()=>"?")),i),aa=JSON.parse,ta=q(),ea=q(),sa=(a,t,e,s,n,i,[o,c]=[],r=[])=>{let l,E,d,u=0,p=0;k(ta,r,(()=>0)),k(ea,r,(()=>[]));const f=async a=>(2!=u&&(u=1,await v.schedule((async()=>{await a(),u=0}))),v),v={load:async(e,s)=>await f((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(v.stopAutoLoad(),await v.load(e,n),p=1,d=s((async(e,s)=>{if(s){const t=s();await f((async()=>a.setTransactionChanges(t)))}else await f((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),v),stopAutoLoad:()=>(p&&(n(d),d=void 0,p=0),v),save:async t=>(1!=u&&(u=2,await v.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}u=0}))),v),startAutoSave:async()=>(await v.stopAutoSave().save(),l=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();B(e)&&B(s)||v.save((()=>[e,s]))})),v),stopAutoSave:()=>(w(l,a.delListener),l=void 0,v),schedule:async(...a)=>(N(j(ea,r),...a),await(async()=>{if(!j(ta,r)){for(Y(ta,r,1);!y((a=j(ea,r),E=a.shift()));)try{await E()}catch(a){i?.(a)}Y(ta,r,0)}var a})(),v),getStore:()=>a,destroy:()=>v.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return o&&(v[o]=()=>c),I(v)},na="store",ia=(a,t,e,s,n,[i],o,c,r)=>{const[l,y,w,E]=Q(t,o,n);return sa(a,(async()=>await E((async()=>(await l(),aa((await y(i,v))[f]?.[na]??"null"))))),(async a=>await E((async()=>{var t;await l(),await w(i,v,{[f]:{[na]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?g.fromEntries([...t]):t)))}},!0,!0)}))),e,s,n,[r,c],c)},oa=(a,t,e,s,n,[i,o,[c,r,l]],w,E,d,u)=>{const[T,m,A,L]=Q(t,w,n,u),R=async(a,t)=>await p(W(o,(async([e,s,n,i],o)=>{const c=a[o];t&&void 0===c||await A(e,s,c,n,i,t)}))),N=async(a,t)=>r?await A(l,v,{[f]:a},!0,!0,t):null;return sa(a,(async()=>await L((async()=>{await T();const a=await(async()=>P(h(await p(W(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>c?(await m(l,v))[f]:{})();return B(a)&&y(t)?void 0:[a,t]}))),(async(a,t)=>await L((async()=>{if(await T(),y(t)){const[t,e]=a();await R(t),await N(e)}else{const[a,e]=t();await R(a,!0),await N(e,!0)}}))),e,s,n,[d,E],E)},ca="json",ra="autoLoadIntervalSeconds",la="rowIdColumnName",ya="tableId",wa="tableName",Ea={mode:ca,[ra]:1},da={load:0,save:0,[wa]:s+"_values"},ua=(a,t,e,s)=>{const n=q();return M(a,((a,i)=>{const o=d($(F(t,E(a)?{[e]:a}:a)),0,_(t));y(o[0])||s(i,o[0])||Y(n,i,o)})),n},pa="pragma ",fa="data_version",va="schema_version",Ta=(a,t,e,n,i,o,c,r,y="getDb",w)=>{let u,p,f;const[T,A,L,R]=(a=>{const t=(a=>F(Ea,E(a)?{storeTableName:a}:a??{}))(a),e=t[ra];if(t.mode==ca){const{storeTableName:a=s}=t;return[1,e,[a],J(a)]}const{tables:{load:n={},save:i={}}={},values:o={}}=t,c=d($(F(da,o)),0,_(da)),r=c[2],l=J(r);return[0,e,[ua(n,{[ya]:null,[la]:v},ya,(a=>U(l,a)&&a==r)),ua(i,{[wa]:null,[la]:v,deleteEmptyColumns:0,deleteEmptyTable:0},wa,((a,t)=>U(l,t)&&t==r)),c],l]})(t);return(T?ia:oa)(a,o?async(a,t)=>(o(a,t),await e(a,t)):e,(a=>{return[(t=async()=>{try{const t=(await e(pa+fa))[0][fa],s=(await e(pa+va))[0][va],n=(await e(m+" TOTAL_CHANGES() c"))[0].c;t==(u??=t)&&s==(p??=s)&&n==(f??=n)||(a(),u=t,p=s)}catch{}},s=A,t(),setInterval(t,1e3*s)),n((t=>R.has(t)?a():0))];var t,s}),(([a,t])=>{l(a),u=p=null,i(t)}),c,L,C(R),r,y,w)};a.createExpoSqliteNextPersister=(a,e,s,n,i)=>Ta(a,s,(async(a,t=[])=>await e.getAllAsync(a,t)),(a=>t.addDatabaseChangeListener((({tableName:t})=>a(t)))),(a=>a.remove()),n,i,e)},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("expo-sqlite/next")):"function"==typeof define&&define.amd?define(["exports","expo-sqlite/next"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterExpoSqliteNext={},a["expo-sqlite/next"]);
