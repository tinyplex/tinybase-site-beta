var a,t;a=this,t=function(a,t){"use strict";const e=a=>typeof a,s="tinybase",n=",",i=e(""),o=(a,t)=>a.repeat(t),c=Promise,r=setInterval,l=clearInterval,y=a=>null==a,w=(a,t,e)=>y(a)?e?.():t(a),E=a=>e(a)==i,d=(a,t,e)=>a.slice(t,e),u=a=>a.length,p=async a=>c.all(a),f=(a,t="")=>a.join(t),T=(a,t)=>a.map(t),m=a=>0==u(a),v=(a,t)=>a.filter(t),A=(a,...t)=>a.push(...t),L=(a,t)=>a?.has(t)??!1,h=a=>[...a?.values()??[]],N=(a,t)=>a?.delete(t),O=Object,R=a=>O.getPrototypeOf(a),S=O.keys,b=O.freeze,g=(a=[])=>O.fromEntries(a),C=(...a)=>O.assign({},...a),D=(a,t)=>T(O.entries(a),(([a,e])=>t(e,a))),x=a=>O.values(a),I=a=>u(S(a)),F=a=>(a=>!y(a)&&w(R(a),(a=>a==O.prototype||y(R(a))),(()=>!0)))(a)&&0==I(a),M=a=>new Map(a),P=a=>[...a?.keys()??[]],$=(a,t)=>a?.get(t),_=(a,t)=>T([...a?.entries()??[]],(([a,e])=>t(e,a))),q=(a,t,e)=>y(e)?(N(a,t),a):a?.set(t,e),B=(a,t,e)=>(L(a,t)||q(a,t,e()),$(a,t)),j=(a,t,e,s=q)=>(D(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!y(((a,t)=>w(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),H=a=>new Set(Array.isArray(a)||y(a)?a:[a]),W=(a,t)=>a?.add(t),k="_",J="_id",U=a=>`"${a.replace(/"/g,'""')}"`,Y="FROM pragma_table_",z="WHERE",G=(a,t,e)=>{const s=M();return[async()=>j(s,g(await p(T(await a("SELECT name "+Y+"list WHERE schema='main'AND type='table'AND name IN("+V(t)+")",t),(async({name:t})=>[t,g(T(await a("SELECT name,type "+Y+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>q(s,t,j(B(s,t,M),e,((a,t,e)=>{e!=$(a,t)&&q(a,t,e)}),((a,t)=>q(a,t))))),((a,t)=>q(s,t))),async(t,e)=>((a,t)=>!y($($(s,a),t)))(t,e)?g(v(T(await a("SELECT*FROM"+U(t)),(a=>{return[a[e],(t={...a},s=e,delete t[s],t)];var t,s})),(([a,t])=>!y(a)&&!F(t)))):{},async(t,e,i,o,c,r=!1)=>{const l=H();D(i??{},(a=>T(S(a??{}),(a=>W(l,a)))));const w=h(l);if(!r&&c&&m(w)&&L(s,t))return await a("DROP TABLE"+U(t)),void q(s,t);if(m(w)||L(s,t)){const n=$(s,t),i=H(P(n));await p([...T(w,(async e=>{N(i,e)||(await a(`ALTER TABLE${U(t)}ADD${U(e)}`),q(n,e,""))})),...!r&&o?T(h(i),(async s=>{s!=e&&(await a(`ALTER TABLE${U(t)}DROP${U(s)}`),q(n,s))})):[]])}else await a(`CREATE TABLE${U(t)}(${U(e)} PRIMARY KEY ON CONFLICT REPLACE${f(T(w,(a=>n+U(a))))});`),q(s,t,M([[e,""],...T(w,(a=>[a,""]))]));if(r)y(i)?await a("DELETE FROM"+U(t)+"WHERE 1"):await p(D(i,(async(s,n)=>{y(s)?await a("DELETE FROM"+U(t)+z+U(e)+"=?",[n]):m(w)||await K(a,t,e,S(s),[n,...x(s)])})));else if(m(w))L(s,t)&&await a("DELETE FROM"+U(t)+"WHERE 1");else{const n=v(P($(s,t)),(a=>a!=e)),o=[],c=[];D(i??{},((a,t)=>{A(o,t,...T(n,(t=>a?.[t]))),A(c,t)})),await K(a,t,e,n,o),await a("DELETE FROM"+U(t)+z+U(e)+"NOT IN("+V(c)+")",c)}},async t=>{let s;await a("BEGIN");try{s=await t()}catch(a){e?.(a)}return await a("END"),s}]},K=async(a,t,e,s,i)=>await a("INSERT INTO"+U(t)+"("+U(e)+f(T(s,(a=>n+U(a))))+")VALUES"+d(o(`,(?${o(",?",u(s))})`,u(i)/(u(s)+1)),1)+"ON CONFLICT("+U(e)+")DO UPDATE SET"+f(T(s,(a=>U(a)+"=excluded."+U(a))),n),i),V=a=>f(T(a,(()=>"?")),n),Q=JSON.parse,X=M(),Z=M(),aa=(a,t,e,s,n,i,[o,c]=[],r=[])=>{let l,E,d,u=0,p=0;B(X,r,(()=>0)),B(Z,r,(()=>[]));const f=async a=>(2!=u&&(u=1,await T.schedule((async()=>{await a(),u=0}))),T),T={load:async(e,s)=>await f((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(T.stopAutoLoad(),await T.load(e,n),p=1,d=s((async(e,s)=>{if(s){const t=s();await f((async()=>a.setTransactionChanges(t)))}else await f((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(p&&(n(d),d=void 0,p=0),T),save:async t=>(1!=u&&(u=2,await T.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}u=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),l=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();F(e)&&F(s)||T.save((()=>[e,s]))})),T),stopAutoSave:()=>(w(l,a.delListener),l=void 0,T),schedule:async(...a)=>(A($(Z,r),...a),await(async()=>{if(!$(X,r)){for(q(X,r,1);!y((a=$(Z,r),E=a.shift()));)try{await E()}catch(a){i?.(a)}q(X,r,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return o&&(T[o]=()=>c),b(T)},ta="store",ea=(a,t,e,s,n,[i],o,c)=>{const[r,l,y,w]=G(t,o,n);return aa(a,(async()=>await w((async()=>(await r(),Q((await l(i,J))[k]?.[ta]??"null"))))),(async a=>await w((async()=>{var t;await r(),await y(i,J,{[k]:{[ta]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?O.fromEntries([...t]):t)))}},!0,!0)}))),e,s,n,["getDb",c],c)},sa=(a,t,e,s,n,[i,o,[c,r,l]],w,E)=>{const[d,u,f,T]=G(t,w,n),m=async(a,t)=>await p(_(o,(async([e,s,n,i],o)=>{const c=a[o];t&&void 0===c||await f(e,s,c,n,i,t)}))),A=async(a,t)=>r?await f(l,J,{[k]:a},!0,!0,t):null;return aa(a,(async()=>await T((async()=>{await d();const a=await(async()=>g(v(await p(_(i,(async([a,t],e)=>[a,await u(e,t)]))),(a=>!F(a[1])))))(),t=await(async()=>c?(await u(l,J))[k]:{})();return F(a)&&y(t)?void 0:[a,t]}))),(async(a,t)=>await T((async()=>{if(await d(),y(t)){const[t,e]=a();await m(t),await A(e)}else{const[a,e]=t();await m(a,!0),await A(e,!0)}}))),e,s,n,["getDb",E],E)},na="json",ia="autoLoadIntervalSeconds",oa="rowIdColumnName",ca="tableId",ra="tableName",la={mode:na,[ia]:1},ya={load:0,save:0,[ra]:s+"_values"},wa=(a,t,e,s)=>{const n=M();return D(a,((a,i)=>{const o=d(x(C(t,E(a)?{[e]:a}:a)),0,I(t));y(o[0])||s(i,o[0])||q(n,i,o)})),n},Ea="pragma ",da="data_version",ua="schema_version",pa=(a,t,e,n,i,o,c,y)=>{let w,u;const[p,f,T,m]=(a=>{const t=(a=>C(la,E(a)?{storeTableName:a}:a??{}))(a),e=t[ia];if(t.mode==na){const{storeTableName:a=s}=t;return[1,e,[a],H(a)]}const{tables:{load:n={},save:i={}}={},values:o={}}=t,c=d(x(C(ya,o)),0,I(ya)),r=c[2],l=H(r);return[0,e,[wa(n,{[ca]:null,[oa]:J},ca,(a=>W(l,a)&&a==r)),wa(i,{[ra]:null,[oa]:J,deleteEmptyColumns:0,deleteEmptyTable:0},ra,((a,t)=>W(l,t)&&t==r)),c],l]})(t);return(p?ea:sa)(a,o?async(a,t)=>(o(a,t),await e(a,t)):e,(a=>[r((async()=>{try{const t=(await e(Ea+da))[0][da],s=(await e(Ea+ua))[0][ua];t==(w??=t)&&s==(u??=s)||(a(),w=t,u=s)}catch{}}),1e3*f),n((t=>m.has(t)?a():0))]),(([a,t])=>{l(a),w=u=null,i(t)}),c,T,h(m),y)};a.createExpoSqliteNextPersister=(a,e,s,n,i)=>pa(a,s,(async(a,t=[])=>await e.allAsync(a,t)),(a=>t.addDatabaseChangeListener((({tableName:t})=>a(t)))),(a=>a.remove()),n,i,e)},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("expo-sqlite/next")):"function"==typeof define&&define.amd?define(["exports","expo-sqlite/next"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterExpoSqliteNext={},a["expo-sqlite/next"]);
