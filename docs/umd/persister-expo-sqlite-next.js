var a,t;a=this,t=function(a,t){"use strict";const e=a=>typeof a,n="tinybase",s="",i=",",o=e(s),r=(a,t)=>a.repeat(t),c=Promise,l=clearInterval,y=a=>null==a,w=(a,t,e)=>y(a)?e?.():t(a),u=a=>e(a)==o,d=(a,t,e)=>a.slice(t,e),p=a=>a.length,E=async a=>c.all(a),f="_",g="_id",v=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",A=(a,t="")=>a.join(t),h=(a,t)=>a.map(t),C=a=>0==p(a),T=(a,t)=>a.filter(t),N=(a,...t)=>a.push(...t),b=(a,t)=>a?.has(t)??!1,L=a=>[...a?.values()??[]],O=(a,t)=>a?.delete(t),S=Object,R=a=>S.getPrototypeOf(a),D=S.entries,x=S.keys,I=S.freeze,M=(a=[])=>S.fromEntries(a),P=(...a)=>S.assign({},...a),_=(a,t)=>t in a,q=(a,t)=>h(D(a),(([a,e])=>t(e,a))),F=a=>S.values(a),j=a=>p(x(a)),B=a=>(a=>!y(a)&&w(R(a),(a=>a==S.prototype||y(R(a))),(()=>!0)))(a)&&0==j(a),H=a=>new Map(a),Y=a=>[...a?.keys()??[]],$=(a,t)=>a?.get(t),k=(a,t)=>h([...a?.entries()??[]],(([a,e])=>t(e,a))),G=(a,t,e)=>y(e)?(O(a,t),a):a?.set(t,e),J=(a,t,e,n)=>(b(a,t)?n?.($(a,t)):G(a,t,e()),$(a,t)),U=(a,t,e,n=G)=>(q(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>_(t,e)?0:n(a,e))),a),W=a=>new Set(Array.isArray(a)||y(a)?a:[a]),z=(a,t)=>a?.add(t),K="TABLE",V="ALTER "+K,Q="DELETE FROM",X=m+"*FROM",Z="FROM pragma_table_",aa="WHERE",ta=(a,t,e,n)=>{const o=H();return[async()=>U(o,M(await E(h(await a("SELECT name "+Z+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+na(t)+")ORDER BY name",t),(async({name:t})=>[t,M(h(await a(m+" name,type "+Z+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>G(o,t,U(J(o,t,H),e,((a,t,e)=>{e!=$(a,t)&&G(a,t,e)}),((a,t)=>G(a,t))))),((a,t)=>G(o,t))),async(t,e)=>((a,t)=>!y($($(o,a),t)))(t,e)?M(T(h(await a(X+v(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!y(a)&&!B(t)))):{},async(t,e,r,c,l,w=!1)=>{const u=W();q(r??{},(a=>h(x(a??{}),(a=>z(u,a)))));const d=L(u);if(!w&&l&&C(d)&&b(o,t))return await a("DROP "+K+v(t)),void G(o,t);if(C(d)||b(o,t)){const n=$(o,t),i=W(Y(n));await E([...h(d,(async e=>{O(i,e)||(await a(V+v(t)+"ADD"+v(e)),G(n,e,s))})),...!w&&c?h(L(i),(async s=>{s!=e&&(await a(V+v(t)+"DROP"+v(s)),G(n,s))})):[]])}else await a("CREATE "+K+v(t)+"("+v(e)+` PRIMARY KEY ON CONFLICT REPLACE${A(h(d,(a=>i+v(a))))});`),G(o,t,H([[e,s],...h(d,(a=>[a,s]))]));if(w)y(r)?await a(Q+v(t)+aa+" 1"):await E(q(r,(async(s,i)=>{y(s)?await a(Q+v(t)+aa+v(e)+"=?",[i]):C(d)||await ea(a,t,e,x(s),[i,...F(s)],n)})));else if(C(d))b(o,t)&&await a(Q+v(t)+aa+" 1");else{const s=T(Y($(o,t)),(a=>a!=e)),i=[],c=[];q(r??{},((a,t)=>{N(i,t,...h(s,(t=>a?.[t]))),N(c,t)})),await ea(a,t,e,s,i,n),await a(Q+v(t)+aa+v(e)+"NOT IN("+na(c)+")",c)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ea=async(a,t,e,n,o,c=!0)=>await a("INSERT "+(c?s:"OR REPLACE ")+"INTO"+v(t)+"("+v(e)+A(h(n,(a=>i+v(a))))+")VALUES"+d(r(`,(?${r(",?",p(n))})`,p(o)/(p(n)+1)),1)+(c?"ON CONFLICT("+v(e)+")DO UPDATE SET"+A(h(n,(a=>v(a)+"=excluded."+v(a))),i):s),h(o,(a=>a??null))),na=a=>A(h(a,(()=>"?")),i),sa=JSON.parse,ia=H(),oa=H(),ra=(a,t,e,n,s,i,o,r={},c=[])=>{let l,d,p,E=0;J(ia,c,(()=>0)),J(oa,c,(()=>[]));const[f,g,v,m,A]=((a,t)=>!a||y(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!B(a)||!B(t),t.setContent]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!B(a)||!B(t),t.setDefaultContent])(o,a),h=async a=>(2!=E&&(E=1,await T.schedule((async()=>{await a(),E=0}))),T),C=t=>{(f&&u(t?.[0])?1===t?.[1][2]?a.applyMergeableChanges:a.setMergeableContent:1===t?.[2]?a.applyChanges:a.setContent)(t)},T={load:async a=>await h((async()=>{try{C(await t())}catch(t){i?.(t),a&&A(a)}})),startAutoLoad:async a=>(await T.stopAutoLoad().load(a),d=n((async(a,e)=>{const n=e?.();await h((async()=>{try{C(n??a?.()??await t())}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(d&&(s(d),d=void 0),T),isAutoLoading:()=>!y(d),save:async a=>(1!=E&&(E=2,await T.schedule((async()=>{try{await e(g,a)}catch(a){i?.(a)}E=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),p=a.addDidFinishTransactionListener((()=>{const a=v();m(a)&&T.save((()=>a))})),T),stopAutoSave:()=>(w(p,a.delListener),p=void 0,T),isAutoSaving:()=>!y(p),schedule:async(...a)=>(N($(oa,c),...a),await(async()=>{if(!$(ia,c)){for(G(ia,c,1);!y((a=$(oa,c),l=a.shift()));)try{await l()}catch(a){i?.(a)}G(ia,c,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({}),...r};return I(T)},ca="store",la=(a,t,e,n,s,[i],o,r,c,l)=>{const[y,w,u,d]=ta(t,o,s,l);return ra(a,(async()=>await d((async()=>(await y(),sa((await w(i,g))[f]?.[ca]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,g,{[f]:{[ca]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?S.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,{[c]:()=>r},r)},ya=(a,t,e,n,s,[i,o,[r,c,l]],w,u,d,p)=>{const[v,m,A,h]=ta(t,w,s,p),C=async(a,t)=>await E(k(o,(async([e,n,s,i],o)=>{t&&!_(a,o)||await A(e,n,a[o],s,i,t)}))),N=async(a,t)=>c?await A(l,g,{[f]:a},!0,!0,t):null;return ra(a,(async()=>await h((async()=>{await v();const a=await(async()=>M(T(await E(k(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>r?(await m(l,g))[f]:{})();return B(a)&&y(t)?void 0:[a,t]}))),(async(a,t)=>await h((async()=>{if(await v(),y(t)){const[t,e]=a();await C(t),await N(e)}else{const[a,e]=t();await C(a,!0),await N(e,!0)}}))),e,n,s,!1,{[d]:()=>u},u)},wa="json",ua="autoLoadIntervalSeconds",da="rowIdColumnName",pa="tableId",Ea="tableName",fa={mode:wa,[ua]:1},ga={load:0,save:0,[Ea]:n+"_values"},va=(a,t,e,n)=>{const s=H();return q(a,((a,i)=>{const o=d(F(P(t,u(a)?{[e]:a}:a)),0,j(t));y(o[0])||n(i,o[0])||G(s,i,o)})),s},ma="pragma ",Aa="data_version",ha="schema_version",Ca=(a,t,e,s,i,o,r,c,y="getDb",w)=>{let p,E,f;const[v,A,h,C]=(a=>{const t=(a=>P(fa,u(a)?{storeTableName:a}:a??{}))(a),e=t[ua];if(t.mode==wa){const{storeTableName:a=n}=t;return[1,e,[a],W(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,r=d(F(P(ga,o)),0,j(ga)),c=r[2],l=W(c);return[0,e,[va(s,{[pa]:null,[da]:g},pa,(a=>z(l,a)&&a==c)),va(i,{[Ea]:null,[da]:g,deleteEmptyColumns:0,deleteEmptyTable:0},Ea,((a,t)=>z(l,t)&&t==c)),r],l]})(t);return(v?la:ya)(a,o?async(a,t)=>(o(a,t),await e(a,t)):e,(a=>{return[(t=async()=>{try{const t=(await e(ma+Aa))[0][Aa],n=(await e(ma+ha))[0][ha],s=(await e(m+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&n==(E??=n)&&s==(f??=s)||(a(),p=t,E=n)}catch{}},n=A,t(),setInterval(t,1e3*n)),s((t=>C.has(t)?a():0))];var t,n}),(([a,t])=>{l(a),p=E=null,i(t)}),r,h,L(C),c,y,w)};a.createExpoSqliteNextPersister=(a,e,n,s,i)=>Ca(a,n,(async(a,t=[])=>await e.getAllAsync(a,t)),(a=>t.addDatabaseChangeListener((({tableName:t})=>a(t)))),(a=>a.remove()),s,i,e)},"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("expo-sqlite/next")):"function"==typeof define&&define.amd?define(["exports","expo-sqlite/next"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterExpoSqliteNext={},a["expo-sqlite/next"]);
