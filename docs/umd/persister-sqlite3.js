var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",s=",",n=t(""),i=(a,t="")=>a.join(t),o=(a,t)=>a.map(t),c=a=>a.length,r=a=>0==c(a),l=(a,t)=>a.filter(t),y=(a,t,e)=>a.slice(t,e),u=(a,...t)=>a.push(...t),w=Promise,d=(a,t)=>a instanceof t,E=a=>null==a,f=(a,t,e)=>E(a)?e?.():t(a),p=a=>t(a)==n,m=async a=>w.all(a),T=(a,t)=>a?.has(t)??!1,v=a=>[...a?.values()??[]],A=(a,t)=>a?.delete(t),h=Object,L=h.keys,S=h.freeze,N=(a=[])=>h.fromEntries(a),C=(...a)=>h.assign({},...a),O=(a,t)=>(delete a[t],a),R=(a,t)=>o(h.entries(a),(([a,e])=>t(e,a))),g=a=>h.values(a),b=a=>c(L(a)),I=a=>(a=>d(a,h)&&a.constructor==h)(a)&&0==b(a),D=a=>new Map(a),$=a=>[...a?.keys()??[]],_=(a,t)=>a?.get(t),P=(a,t)=>o([...a?.entries()??[]],(([a,e])=>t(e,a))),F=(a,t,e)=>E(e)?(A(a,t),a):a?.set(t,e),M=(a,t,e,s=F)=>(R(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!E(((a,t)=>f(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),B="_id",j=a=>`"${a.replace(/"/g,'""')}"`,x=a=>new Set(Array.isArray(a)||E(a)?a:[a]),k=(a,t)=>a?.add(t),q="SELECT*FROM",H="FROM pragma_table_",J="WHERE",U=(a,t)=>{const e=D(),n=(a,t)=>!E(_(_(e,a),t)),y=async(t,n,y,w,d)=>{const E=x();R(d??{},(a=>o(L(a),(a=>k(E,a)))));const f=v(E);if(r(f)&&T(e,t)&&w)return await a("DROP TABLE"+j(t)),void F(e,t);if(r(f)||T(e,t)){const s=_(e,t),i=x($(s));await m([...o(f,(async e=>{A(i,e)||(await a(`ALTER TABLE${j(t)}ADD${j(e)}`),F(s,e,""))})),...y?o(v(i),(async e=>{e!=n&&(await a(`ALTER TABLE${j(t)}DROP${j(e)}`),F(s,e))})):[]])}else await a(`CREATE TABLE${j(t)}(${j(n)} PRIMARY KEY ON CONFLICT REPLACE${i(o(f,(a=>s+j(a))))});`),F(e,t,D([[n,""],...o(f,(a=>[a,""]))]));if(r(f))T(e,t)&&await a("DELETE FROM"+j(t));else{const r=[],y=[],w=[],E=l($(_(e,t)),(a=>a!=n));R(d,((a,t)=>{var e;u(r,`(?${e=c(E),",?".repeat(e)})`),u(y,t,...o(E,(t=>a[t]))),u(w,t)})),await a("INSERT INTO"+j(t)+"("+j(n)+i(o(E,(a=>s+j(a))))+")VALUES"+i(r,s)+"ON CONFLICT("+j(n)+")DO UPDATE SET"+i(o(E,(a=>j(a)+"=excluded."+j(a))),s),y),await a("DELETE FROM"+j(t)+J+j(n)+"NOT IN("+W(w)+")",w)}};return[async()=>M(e,N(await m(o(await a("SELECT name "+H+"list WHERE schema='main'AND type='table'AND name IN("+W(t)+")",t),(async({name:t})=>[t,N(o(await a("SELECT name,type "+H+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,s)=>{return F(e,t,M((o=D,T(n=e,i=t)||F(n,i,o()),_(n,i)),s,((a,t,e)=>{e!=_(a,t)&&F(a,t,e)}),((a,t)=>F(a,t))));var n,i,o}),((a,t)=>F(e,t))),async(t,e)=>{const s=n(t,e)?await a(q+j(t)+J+j(e)+"=?",["_"]):[];return r(s)?null:O(s[0],e)},async(a,t,e,s)=>await y(a,t,!0,!0,{[e]:s}),async(t,e)=>n(t,e)?N(l(o(await a(q+j(t)),(a=>[a[e],O({...a},e)])),(([a,t])=>!E(a)&&!I(t)))):{},y]},W=a=>i(o(a,(()=>"?")),s),Y=JSON.parse,z=(a,t,e,s,n)=>{let i,o,c,r=0,l=0,y=0;const w=[],d=async a=>(2!=r&&(r=1,await p.schedule((async()=>{await a(),r=0}))),p),p={load:async(e,s)=>await d((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(p.stopAutoLoad(),await p.load(e,n),y=1,c=s((async(e,s)=>await d((async()=>{if(s)a.setTransactionChanges(s());else try{a.setContent(e?.()??await t())}catch{}})))),p),stopAutoLoad:()=>(y&&(n(c),c=void 0,y=0),p),save:async t=>(1!=r&&(r=2,await p.schedule((async()=>{try{await e(a.getContent,t)}catch{}r=0}))),p),startAutoSave:async()=>(await p.stopAutoSave().save(),i=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();I(e)&&I(s)||p.save((()=>[e,s]))})),p),stopAutoSave:()=>(f(i,a.delListener),p),schedule:async(...a)=>(u(w,...a),await(async()=>{if(!l){for(l=1;!E((a=w,o=a.shift()));)try{await o()}catch{}l=0}var a})(),p),getStore:()=>a,destroy:()=>p.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return S(p)},K="store",V=(a,t,e,s,[n],i)=>{const[o,c,r]=U(t,i),l=z(a,(async()=>(await o(),Y((await c(n,B)??{})[K]))),(async a=>l.schedule(o,(async()=>{var t;await r(n,B,"_",{[K]:(t=a(),JSON.stringify(t,((a,t)=>d(t,Map)?h.fromEntries([...t]):t)))})}))),e,s);return l},G=(a,t,e,s,[n,i,[o,c,r]],y)=>{const[u,w,d,f,p]=U(t,y);return z(a,(async()=>{await u();const a=await(async()=>N(l(await m(P(n,(async([a,t],e)=>[a,await f(e,t)]))),(a=>!I(a[1])))))(),t=await(async()=>o?await w(r,B):{})();return I(a)&&E(t)?void 0:[a,t]}),(async a=>{const[t,e]=a();await u(),await(async a=>await m(P(i,(async([t,e,s,n],i)=>await p(t,e,s,n,a[i])))))(t),await(async a=>c?await d(r,B,"_",a):null)(e)}),e,s)},Q="json",X="autoLoadIntervalSeconds",Z="rowIdColumnName",aa="tableId",ta="tableName",ea={mode:Q,[X]:1},sa={load:0,save:0,[ta]:e+"_values"},na=(a,t,e,s)=>{const n=D();return R(a,((a,i)=>{const o=y(g(C(t,p(a)?{[e]:a}:a)),0,b(t));E(o[0])||s(i,o[0])||F(n,i,o)})),n},ia="pragma ",oa="data_version",ca="schema_version",ra=(a,t,s,n,i)=>{let o,c;const[r,l,u,w]=(a=>{const t=(a=>C(ea,p(a)?{storeTableName:a}:a??{}))(a),s=t[X];if(t.mode==Q){const{storeTableName:a=e}=t;return[1,s,[a],x(a)]}const{tables:{load:n={},save:i={}}={},values:o={}}=t,c=y(g(C(sa,o)),0,b(sa)),r=c[2],l=x(r);return[0,s,[na(n,{[aa]:null,[Z]:B},aa,(a=>k(l,a)&&a==r)),na(i,{[ta]:null,[Z]:B,deleteEmptyColumns:0,deleteEmptyTable:0},ta,((a,t)=>k(l,t)&&t==r)),c],l]})(t);return(r?V:G)(a,s,(a=>[setInterval((async()=>{try{const t=(await s(ia+oa))[0][oa],e=(await s(ia+ca))[0][ca];t==(o??=t)&&e==(c??=e)||(a(),o=t,c=e)}catch{}}),1e3*l),n((t=>w.has(t)?a():0))]),(([a,t])=>{clearInterval(a),o=c=null,i(t)}),u,v(w))},la="change";a.createSqlite3Persister=(a,t,e)=>ra(a,e,((a,e=[])=>new w(((s,n)=>t.all(a,e,((a,t)=>a?n(a):s(t.map((a=>({...a}))))))))),(a=>{const e=(t,e,s)=>a(s);return t.on(la,e),e}),(a=>t.off(la,a)))},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterSqlite3={});
