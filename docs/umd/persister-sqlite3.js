<<<<<<< HEAD
var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,p=async a=>c.all(a),f="_",E="_id",g=a=>`"${a.replace(/"/g,'""')}"`,v="SELECT",m=(a,t="")=>a.join(t),h=(a,t)=>a.map(t),C=a=>0==d(a),T=(a,t)=>a.filter(t),A=(a,...t)=>a.push(...t),b=(a,t)=>a?.has(t)??!1,N=a=>[...a?.values()??[]],O=(a,t)=>a?.delete(t),L=Object,R=a=>L.getPrototypeOf(a),S=L.entries,D=L.keys,I=L.freeze,M=(a=[])=>L.fromEntries(a),P=(...a)=>L.assign({},...a),_=(a,t)=>t in a,F=(a,t)=>h(S(a),(([a,e])=>t(e,a))),j=a=>L.values(a),x=a=>d(D(a)),B=a=>(a=>!l(a)&&y(R(a),(a=>a==L.prototype||l(R(a))),(()=>!0)))(a)&&0==x(a),H=a=>new Map(a),Y=a=>[...a?.keys()??[]],$=(a,t)=>a?.get(t),k=(a,t)=>h([...a?.entries()??[]],(([a,e])=>t(e,a))),q=(a,t,e)=>l(e)?(O(a,t),a):a?.set(t,e),G=(a,t,e)=>(b(a,t)||q(a,t,e()),$(a,t)),J=(a,t,e,n=q)=>(F(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>_(t,e)?0:n(a,e))),a),U=a=>new Set(Array.isArray(a)||l(a)?a:[a]),W=(a,t)=>a?.add(t),z="TABLE",K="ALTER "+z,V="DELETE FROM",Q=v+"*FROM",X="FROM pragma_table_",Z="WHERE",aa=(a,t,e,i)=>{const o=H();return[async()=>J(o,M(await p(h(await a("SELECT name "+X+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+ea(t)+")ORDER BY name",t),(async({name:t})=>[t,M(h(await a(v+" name,type "+X+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>q(o,t,J(G(o,t,H),e,((a,t,e)=>{e!=$(a,t)&&q(a,t,e)}),((a,t)=>q(a,t))))),((a,t)=>q(o,t))),async(t,e)=>((a,t)=>!l($($(o,a),t)))(t,e)?M(T(h(await a(Q+g(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=U();F(c??{},(a=>h(D(a??{}),(a=>W(u,a)))));const d=N(u);if(!w&&y&&C(d)&&b(o,t))return await a("DROP "+z+g(t)),void q(o,t);if(C(d)||b(o,t)){const s=$(o,t),i=U(Y(s));await p([...h(d,(async e=>{O(i,e)||(await a(K+g(t)+"ADD"+g(e)),q(s,e,n))})),...!w&&r?h(N(i),(async n=>{n!=e&&(await a(K+g(t)+"DROP"+g(n)),q(s,n))})):[]])}else await a("CREATE "+z+g(t)+"("+g(e)+` PRIMARY KEY ON CONFLICT REPLACE${m(h(d,(a=>s+g(a))))});`),q(o,t,H([[e,n],...h(d,(a=>[a,n]))]));if(w)l(c)?await a(V+g(t)+Z+" 1"):await p(F(c,(async(n,s)=>{l(n)?await a(V+g(t)+Z+g(e)+"=?",[s]):C(d)||await ta(a,t,e,D(n),[s,...j(n)],i)})));else if(C(d))b(o,t)&&await a(V+g(t)+Z+" 1");else{const n=T(Y($(o,t)),(a=>a!=e)),s=[],r=[];F(c??{},((a,t)=>{A(s,t,...h(n,(t=>a?.[t]))),A(r,t)})),await ta(a,t,e,n,s,i),await a(V+g(t)+Z+g(e)+"NOT IN("+ea(r)+")",r)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ta=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+g(t)+"("+g(e)+m(h(i,(a=>s+g(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+g(e)+")DO UPDATE SET"+m(h(i,(a=>g(a)+"=excluded."+g(a))),s):n),h(c,(a=>a??null))),ea=a=>m(h(a,(()=>"?")),s),na=JSON.parse,sa=H(),ia=H(),oa=a=>w(a?.[0]),ca=(a,t,e,n,s,i,o,[c,r]=[],w=[])=>{let u,d,p,f=0,E=0;G(sa,w,(()=>0)),G(ia,w,(()=>[]));const[g,v,m,h]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!B(a)||!B(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!B(a)||!B(t)])(o,a),C=async a=>(2!=f&&(f=1,await T.schedule((async()=>{await a(),f=0}))),T),T={load:async(e,n)=>await C((async()=>{try{const e=await t();(g&&oa(e)?a.setMergeableContent:a.setContent)(e)}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(T.stopAutoLoad(),await T.load(e,s),E=1,p=n((async(e,n)=>{if(n){const t=n();await C((async()=>(g&&oa(t)?a.applyMergeableChanges:a.applyChanges)(t)))}else await C((async()=>{try{const n=e?.()??await t();(g&&oa(n)?a.setMergeableContent:a.setContent)(n)}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(E&&(s(p),p=void 0,E=0),T),save:async a=>(1!=f&&(f=2,await T.schedule((async()=>{try{await e(v,a)}catch(a){i?.(a)}f=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),u=a.addDidFinishTransactionListener((()=>{const a=m();h(a)&&T.save((()=>a))})),T),stopAutoSave:()=>(y(u,a.delListener),u=void 0,T),schedule:async(...a)=>(A($(ia,w),...a),await(async()=>{if(!$(sa,w)){for(q(sa,w,1);!l((a=$(ia,w),d=a.shift()));)try{await d()}catch(a){i?.(a)}q(sa,w,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(T[c]=()=>r),I(T)},ra="store",la=(a,t,e,n,s,[i],o,c,r,l)=>{const[y,w,u,d]=aa(t,o,s,l);return ca(a,(async()=>await d((async()=>(await y(),na((await w(i,E))[f]?.[ra]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,E,{[f]:{[ra]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?L.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,[r,c],c)},ya=(a,t,e,n,s,[i,o,[c,r,y]],w,u,d,g)=>{const[v,m,h,C]=aa(t,w,s,g),A=async(a,t)=>await p(k(o,(async([e,n,s,i],o)=>{t&&!_(a,o)||await h(e,n,a[o],s,i,t)}))),b=async(a,t)=>r?await h(y,E,{[f]:a},!0,!0,t):null;return ca(a,(async()=>await C((async()=>{await v();const a=await(async()=>M(T(await p(k(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>c?(await m(y,E))[f]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await C((async()=>{if(await v(),l(t)){const[t,e]=a();await A(t),await b(e)}else{const[a,e]=t();await A(a,!0),await b(e,!0)}}))),e,n,s,!1,[d,u],u)},wa="json",ua="autoLoadIntervalSeconds",da="rowIdColumnName",pa="tableId",fa="tableName",Ea={mode:wa,[ua]:1},ga={load:0,save:0,[fa]:e+"_values"},va=(a,t,e,n)=>{const s=H();return F(a,((a,i)=>{const o=u(j(P(t,w(a)?{[e]:a}:a)),0,x(t));l(o[0])||n(i,o[0])||q(s,i,o)})),s},ma="pragma ",ha="data_version",Ca="schema_version",Ta=(a,t,n,s,i,o,c,l,y="getDb",d)=>{let p,f,g;const[m,h,C,T]=(a=>{const t=(a=>P(Ea,w(a)?{storeTableName:a}:a??{}))(a),n=t[ua];if(t.mode==wa){const{storeTableName:a=e}=t;return[1,n,[a],U(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=u(j(P(ga,o)),0,x(ga)),r=c[2],l=U(r);return[0,n,[va(s,{[pa]:null,[da]:E},pa,(a=>W(l,a)&&a==r)),va(i,{[fa]:null,[da]:E,deleteEmptyColumns:0,deleteEmptyTable:0},fa,((a,t)=>W(l,t)&&t==r)),c],l]})(t);return(m?la:ya)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(ma+ha))[0][ha],e=(await n(ma+Ca))[0][Ca],s=(await n(v+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&e==(f??=e)&&s==(g??=s)||(a(),p=t,f=e)}catch{}},e=h,t(),setInterval(t,1e3*e)),s((t=>T.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),p=f=null,i(t)}),c,C,N(T),l,y,d)},Aa="change";a.createSqlite3Persister=(a,t,e,n,s)=>Ta(a,e,(async(a,e=[])=>{return await(n=(n,s)=>t.all(a,e,((a,t)=>a?s(a):n(t))),new c(n));var n}),(a=>{const e=(t,e,n)=>a(n);return t.on(Aa,e),e}),(a=>t.off(Aa,a)),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterSqlite3={});
=======
var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,E=(a,t,e)=>a.slice(t,e),u=a=>a.length,d=async a=>c.all(a),p="_",f="_id",T=a=>`"${a.replace(/"/g,'""')}"`,g="SELECT",v=(a,t="")=>a.join(t),m=(a,t)=>a.map(t),A=a=>0==u(a),h=(a,t)=>a.filter(t),L=(a,...t)=>a.push(...t),C=(a,t)=>a?.has(t)??!1,R=a=>[...a?.values()??[]],O=(a,t)=>a?.delete(t),b=Object,N=a=>b.getPrototypeOf(a),S=b.entries,D=b.keys,M=b.freeze,I=(a=[])=>b.fromEntries(a),P=(...a)=>b.assign({},...a),F=(a,t)=>t in a,$=(a,t)=>m(S(a),(([a,e])=>t(e,a))),_=a=>b.values(a),B=a=>u(D(a)),H=a=>(a=>!l(a)&&y(N(a),(a=>a==b.prototype||l(N(a))),(()=>!0)))(a)&&0==B(a),j=a=>new Map(a),x=a=>[...a?.keys()??[]],W=(a,t)=>a?.get(t),Y=(a,t)=>m([...a?.entries()??[]],(([a,e])=>t(e,a))),k=(a,t,e)=>l(e)?(O(a,t),a):a?.set(t,e),q=(a,t,e,n)=>(C(a,t)?n?.(W(a,t)):k(a,t,e()),W(a,t)),G=(a,t,e,n=k)=>($(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>F(t,e)?0:n(a,e))),a),J=a=>new Set(Array.isArray(a)||l(a)?a:[a]),U=(a,t)=>a?.add(t),z=g+"*FROM",K="FROM pragma_table_",V="WHERE",Q=(a,t,e,i)=>{const o=j();return[async()=>G(o,I(await d(m(await a("SELECT name "+K+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+Z(t)+")ORDER BY name",t),(async({name:t})=>[t,I(m(await a(g+" name,type "+K+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>k(o,t,G(q(o,t,j),e,((a,t,e)=>{e!=W(a,t)&&k(a,t,e)}),((a,t)=>k(a,t))))),((a,t)=>k(o,t))),async(t,e)=>((a,t)=>!l(W(W(o,a),t)))(t,e)?I(h(m(await a(z+T(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!H(t)))):{},async(t,e,c,r,y,w=!1)=>{const E=J();$(c??{},(a=>m(D(a??{}),(a=>U(E,a)))));const u=R(E);if(!w&&y&&A(u)&&C(o,t))return await a("DROP TABLE"+T(t)),void k(o,t);if(A(u)||C(o,t)){const s=W(o,t),i=J(x(s));await d([...m(u,(async e=>{O(i,e)||(await a(`ALTER TABLE${T(t)}ADD${T(e)}`),k(s,e,n))})),...!w&&r?m(R(i),(async n=>{n!=e&&(await a(`ALTER TABLE${T(t)}DROP${T(n)}`),k(s,n))})):[]])}else await a(`CREATE TABLE${T(t)}(${T(e)} PRIMARY KEY ON CONFLICT REPLACE${v(m(u,(a=>s+T(a))))});`),k(o,t,j([[e,n],...m(u,(a=>[a,n]))]));if(w)l(c)?await a("DELETE FROM"+T(t)+"WHERE 1"):await d($(c,(async(n,s)=>{l(n)?await a("DELETE FROM"+T(t)+V+T(e)+"=?",[s]):A(u)||await X(a,t,e,D(n),[s,..._(n)],i)})));else if(A(u))C(o,t)&&await a("DELETE FROM"+T(t)+"WHERE 1");else{const n=h(x(W(o,t)),(a=>a!=e)),s=[],i=[];$(c??{},((a,t)=>{L(s,t,...m(n,(t=>a?.[t]))),L(i,t)})),await X(a,t,e,n,s),await a("DELETE FROM"+T(t)+V+T(e)+"NOT IN("+Z(i)+")",i)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},X=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+T(t)+"("+T(e)+v(m(i,(a=>s+T(a))))+")VALUES"+E(o(`,(?${o(",?",u(i))})`,u(c)/(u(i)+1)),1)+(r?"ON CONFLICT("+T(e)+")DO UPDATE SET"+v(m(i,(a=>T(a)+"=excluded."+T(a))),s):n),m(c,(a=>a??null))),Z=a=>v(m(a,(()=>"?")),s),aa=JSON.parse,ta=j(),ea=j(),na=a=>w(a?.[0]),sa=(a,t,e,n,s,i,o,[c,r]=[],w=[])=>{let E,u,d,p=0,f=0;q(ta,w,(()=>0)),q(ea,w,(()=>[]));const[T,g,v,m]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!H(a)||!H(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!H(a)||!H(t)])(o,a),A=async a=>(2!=p&&(p=1,await h.schedule((async()=>{await a(),p=0}))),h),h={load:async(e,n)=>await A((async()=>{try{const e=await t();(T&&na(e)?a.setMergeableContent:a.setContent)(e)}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(h.stopAutoLoad(),await h.load(e,s),f=1,d=n((async(e,n)=>{if(n){const t=n();await A((async()=>(T&&na(t)?a.applyMergeableChanges:a.applyChanges)(t)))}else await A((async()=>{try{const n=e?.()??await t();(T&&na(n)?a.setMergeableContent:a.setContent)(n)}catch(a){i?.(a)}}))})),h),stopAutoLoad:()=>(f&&(s(d),d=void 0,f=0),h),save:async a=>(1!=p&&(p=2,await h.schedule((async()=>{try{await e(g,a)}catch(a){i?.(a)}p=0}))),h),startAutoSave:async()=>(await h.stopAutoSave().save(),E=a.addDidFinishTransactionListener((()=>{const a=v();m(a)&&h.save((()=>a))})),h),stopAutoSave:()=>(y(E,a.delListener),E=void 0,h),schedule:async(...a)=>(L(W(ea,w),...a),await(async()=>{if(!W(ta,w)){for(k(ta,w,1);!l((a=W(ea,w),u=a.shift()));)try{await u()}catch(a){i?.(a)}k(ta,w,0)}var a})(),h),getStore:()=>a,destroy:()=>h.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(h[c]=()=>r),M(h)},ia="store",oa=(a,t,e,n,s,[i],o,c,r)=>{const[l,y,w,E]=Q(t,o,s);return sa(a,(async()=>await E((async()=>(await l(),aa((await y(i,f))[p]?.[ia]??"null"))))),(async a=>await E((async()=>{var t;await l(),await w(i,f,{[p]:{[ia]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?b.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,[r,c],c)},ca=(a,t,e,n,s,[i,o,[c,r,y]],w,E,u,T)=>{const[g,v,m,A]=Q(t,w,s,T),L=async(a,t)=>await d(Y(o,(async([e,n,s,i],o)=>{t&&!F(a,o)||await m(e,n,a[o],s,i,t)}))),C=async(a,t)=>r?await m(y,f,{[p]:a},!0,!0,t):null;return sa(a,(async()=>await A((async()=>{await g();const a=await(async()=>I(h(await d(Y(i,(async([a,t],e)=>[a,await v(e,t)]))),(a=>!H(a[1])))))(),t=await(async()=>c?(await v(y,f))[p]:{})();return H(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await A((async()=>{if(await g(),l(t)){const[t,e]=a();await L(t),await C(e)}else{const[a,e]=t();await L(a,!0),await C(e,!0)}}))),e,n,s,!1,[u,E],E)},ra="json",la="autoLoadIntervalSeconds",ya="rowIdColumnName",wa="tableId",Ea="tableName",ua={mode:ra,[la]:1},da={load:0,save:0,[Ea]:e+"_values"},pa=(a,t,e,n)=>{const s=j();return $(a,((a,i)=>{const o=E(_(P(t,w(a)?{[e]:a}:a)),0,B(t));l(o[0])||n(i,o[0])||k(s,i,o)})),s},fa="pragma ",Ta="data_version",ga="schema_version",va=(a,t,n,s,i,o,c,l,y="getDb",u)=>{let d,p,T;const[v,m,A,h]=(a=>{const t=(a=>P(ua,w(a)?{storeTableName:a}:a??{}))(a),n=t[la];if(t.mode==ra){const{storeTableName:a=e}=t;return[1,n,[a],J(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=E(_(P(da,o)),0,B(da)),r=c[2],l=J(r);return[0,n,[pa(s,{[wa]:null,[ya]:f},wa,(a=>U(l,a)&&a==r)),pa(i,{[Ea]:null,[ya]:f,deleteEmptyColumns:0,deleteEmptyTable:0},Ea,((a,t)=>U(l,t)&&t==r)),c],l]})(t);return(v?oa:ca)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(fa+Ta))[0][Ta],e=(await n(fa+ga))[0][ga],s=(await n(g+" TOTAL_CHANGES() c"))[0].c;t==(d??=t)&&e==(p??=e)&&s==(T??=s)||(a(),d=t,p=e)}catch{}},e=m,t(),setInterval(t,1e3*e)),s((t=>h.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),d=p=null,i(t)}),c,A,R(h),l,y,u)},ma="change";a.createSqlite3Persister=(a,t,e,n,s)=>va(a,e,(async(a,e=[])=>{return await(n=(n,s)=>t.all(a,e,((a,t)=>a?s(a):n(t))),new c(n));var n}),(a=>{const e=(t,e,n)=>a(n);return t.on(ma,e),e}),(a=>t.off(ma,a)),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterSqlite3={});
>>>>>>> 9bf8cd2982 (v5.0.0-beta.5)
