var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),r=Promise,c=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,p=async a=>r.all(a),f="_",E="_id",g=a=>`"${a.replace(/"/g,'""')}"`,v="SELECT",m=(a,t="")=>a.join(t),h=(a,t)=>a.map(t),A=a=>0==d(a),T=(a,t)=>a.filter(t),C=(a,...t)=>a.push(...t),N=(a,t)=>a?.has(t)??!1,O=a=>[...a?.values()??[]],b=(a,t)=>a?.delete(t),L=Object,S=a=>L.getPrototypeOf(a),R=L.entries,D=L.keys,I=L.freeze,M=(a=[])=>L.fromEntries(a),P=(...a)=>L.assign({},...a),_=(a,t)=>t in a,F=(a,t)=>h(R(a),(([a,e])=>t(e,a))),j=a=>L.values(a),x=a=>d(D(a)),B=a=>(a=>!l(a)&&y(S(a),(a=>a==L.prototype||l(S(a))),(()=>!0)))(a)&&0==x(a),H=a=>new Map(a),Y=a=>[...a?.keys()??[]],$=(a,t)=>a?.get(t),k=(a,t)=>h([...a?.entries()??[]],(([a,e])=>t(e,a))),q=(a,t,e)=>l(e)?(b(a,t),a):a?.set(t,e),G=(a,t,e,n)=>(N(a,t)?n?.($(a,t)):q(a,t,e()),$(a,t)),J=(a,t,e,n=q)=>(F(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>_(t,e)?0:n(a,e))),a),U=a=>new Set(Array.isArray(a)||l(a)?a:[a]),W=(a,t)=>a?.add(t),z="TABLE",K="ALTER "+z,V="DELETE FROM",Q=v+"*FROM",X="FROM pragma_table_",Z="WHERE",aa=(a,t,e,i)=>{const o=H();return[async()=>J(o,M(await p(h(await a("SELECT name "+X+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+ea(t)+")ORDER BY name",t),(async({name:t})=>[t,M(h(await a(v+" name,type "+X+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>q(o,t,J(G(o,t,H),e,((a,t,e)=>{e!=$(a,t)&&q(a,t,e)}),((a,t)=>q(a,t))))),((a,t)=>q(o,t))),async(t,e)=>((a,t)=>!l($($(o,a),t)))(t,e)?M(T(h(await a(Q+g(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,r,c,y,w=!1)=>{const u=U();F(r??{},(a=>h(D(a??{}),(a=>W(u,a)))));const d=O(u);if(!w&&y&&A(d)&&N(o,t))return await a("DROP "+z+g(t)),void q(o,t);if(A(d)||N(o,t)){const s=$(o,t),i=U(Y(s));await p([...h(d,(async e=>{b(i,e)||(await a(K+g(t)+"ADD"+g(e)),q(s,e,n))})),...!w&&c?h(O(i),(async n=>{n!=e&&(await a(K+g(t)+"DROP"+g(n)),q(s,n))})):[]])}else await a("CREATE "+z+g(t)+"("+g(e)+` PRIMARY KEY ON CONFLICT REPLACE${m(h(d,(a=>s+g(a))))});`),q(o,t,H([[e,n],...h(d,(a=>[a,n]))]));if(w)l(r)?await a(V+g(t)+Z+" 1"):await p(F(r,(async(n,s)=>{l(n)?await a(V+g(t)+Z+g(e)+"=?",[s]):A(d)||await ta(a,t,e,D(n),[s,...j(n)],i)})));else if(A(d))N(o,t)&&await a(V+g(t)+Z+" 1");else{const n=T(Y($(o,t)),(a=>a!=e)),s=[],c=[];F(r??{},((a,t)=>{C(s,t,...h(n,(t=>a?.[t]))),C(c,t)})),await ta(a,t,e,n,s,i),await a(V+g(t)+Z+g(e)+"NOT IN("+ea(c)+")",c)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ta=async(a,t,e,i,r,c=!0)=>await a("INSERT "+(c?n:"OR REPLACE ")+"INTO"+g(t)+"("+g(e)+m(h(i,(a=>s+g(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(r)/(d(i)+1)),1)+(c?"ON CONFLICT("+g(e)+")DO UPDATE SET"+m(h(i,(a=>g(a)+"=excluded."+g(a))),s):n),h(r,(a=>a??null))),ea=a=>m(h(a,(()=>"?")),s),na=JSON.parse,sa=H(),ia=H(),oa=(a,t,e,n,s,i,o,r={},c=[])=>{let u,d,p,f=0;G(sa,c,(()=>0)),G(ia,c,(()=>[]));const[E,g,v,m,h]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!B(a)||!B(t),t.setContent]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!B(a)||!B(t),t.setDefaultContent])(o,a),A=async a=>(2!=f&&(f=1,await N.schedule((async()=>{await a(),f=0}))),N),T=t=>{(E&&w(t?.[0])?1===t?.[1][2]?a.applyMergeableChanges:a.setMergeableContent:1===t?.[2]?a.applyChanges:a.setContent)(t)},N={load:async a=>await A((async()=>{try{T(await t())}catch(t){i?.(t),a&&h(a)}})),startAutoLoad:async a=>(await N.stopAutoLoad().load(a),d=n((async(a,e)=>{const n=e?.();await A((async()=>{try{T(n??a?.()??await t())}catch(a){i?.(a)}}))})),N),stopAutoLoad:()=>(d&&(s(d),d=void 0),N),isAutoLoading:()=>!l(d),save:async a=>(1!=f&&(f=2,await N.schedule((async()=>{try{await e(g,a)}catch(a){i?.(a)}f=0}))),N),startAutoSave:async()=>(await N.stopAutoSave().save(),p=a.addDidFinishTransactionListener((()=>{const a=v();m(a)&&N.save((()=>a))})),N),stopAutoSave:()=>(y(p,a.delListener),p=void 0,N),isAutoSaving:()=>!l(p),schedule:async(...a)=>(C($(ia,c),...a),await(async()=>{if(!$(sa,c)){for(q(sa,c,1);!l((a=$(ia,c),u=a.shift()));)try{await u()}catch(a){i?.(a)}q(sa,c,0)}var a})(),N),getStore:()=>a,destroy:()=>N.stopAutoLoad().stopAutoSave(),getStats:()=>({}),...r};return I(N)},ra="store",ca=(a,t,e,n,s,[i],o,r,c,l)=>{const[y,w,u,d]=aa(t,o,s,l);return oa(a,(async()=>await d((async()=>(await y(),na((await w(i,E))[f]?.[ra]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,E,{[f]:{[ra]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?L.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,{[c]:()=>r},r)},la=(a,t,e,n,s,[i,o,[r,c,y]],w,u,d,g)=>{const[v,m,h,A]=aa(t,w,s,g),C=async(a,t)=>await p(k(o,(async([e,n,s,i],o)=>{t&&!_(a,o)||await h(e,n,a[o],s,i,t)}))),N=async(a,t)=>c?await h(y,E,{[f]:a},!0,!0,t):null;return oa(a,(async()=>await A((async()=>{await v();const a=await(async()=>M(T(await p(k(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>r?(await m(y,E))[f]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await A((async()=>{if(await v(),l(t)){const[t,e]=a();await C(t),await N(e)}else{const[a,e]=t();await C(a,!0),await N(e,!0)}}))),e,n,s,!1,{[d]:()=>u},u)},ya="json",wa="autoLoadIntervalSeconds",ua="rowIdColumnName",da="tableId",pa="tableName",fa={mode:ya,[wa]:1},Ea={load:0,save:0,[pa]:e+"_values"},ga=(a,t,e,n)=>{const s=H();return F(a,((a,i)=>{const o=u(j(P(t,w(a)?{[e]:a}:a)),0,x(t));l(o[0])||n(i,o[0])||q(s,i,o)})),s},va="pragma ",ma="data_version",ha="schema_version",Aa=(a,t,n,s,i,o,r,l,y="getDb",d)=>{let p,f,g;const[m,h,A,T]=(a=>{const t=(a=>P(fa,w(a)?{storeTableName:a}:a??{}))(a),n=t[wa];if(t.mode==ya){const{storeTableName:a=e}=t;return[1,n,[a],U(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,r=u(j(P(Ea,o)),0,x(Ea)),c=r[2],l=U(c);return[0,n,[ga(s,{[da]:null,[ua]:E},da,(a=>W(l,a)&&a==c)),ga(i,{[pa]:null,[ua]:E,deleteEmptyColumns:0,deleteEmptyTable:0},pa,((a,t)=>W(l,t)&&t==c)),r],l]})(t);return(m?ca:la)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(va+ma))[0][ma],e=(await n(va+ha))[0][ha],s=(await n(v+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&e==(f??=e)&&s==(g??=s)||(a(),p=t,f=e)}catch{}},e=h,t(),setInterval(t,1e3*e)),s((t=>T.has(t)?a():0))];var t,e}),(([a,t])=>{c(a),p=f=null,i(t)}),r,A,O(T),l,y,d)},Ta="change";a.createSqlite3Persister=(a,t,e,n,s)=>Aa(a,e,(async(a,e=[])=>{return await(n=(n,s)=>t.all(a,e,((a,t)=>a?s(a):n(t))),new r(n));var n}),(a=>{const e=(t,e,n)=>a(n);return t.on(Ta,e),e}),(a=>t.off(Ta,a)),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterSqlite3={});
