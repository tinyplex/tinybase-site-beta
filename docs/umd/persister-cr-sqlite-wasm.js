var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",s="",n=",",i=t(s),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,E=(a,t,e)=>a.slice(t,e),d=a=>a.length,u=async a=>c.all(a),p="_",f="_id",T=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",v=(a,t="")=>a.join(t),A=(a,t)=>a.map(t),L=a=>0==d(a),O=(a,t)=>a.filter(t),R=(a,...t)=>a.push(...t),h=(a,t)=>a?.has(t)??!1,N=a=>[...a?.values()??[]],C=(a,t)=>a?.delete(t),S=Object,D=a=>S.getPrototypeOf(a),g=S.entries,b=S.keys,I=S.freeze,P=(a=[])=>S.fromEntries(a),F=(...a)=>S.assign({},...a),M=(a,t)=>A(g(a),(([a,e])=>t(e,a))),$=a=>S.values(a),_=a=>d(b(a)),B=a=>(a=>!l(a)&&y(D(a),(a=>a==S.prototype||l(D(a))),(()=>!0)))(a)&&0==_(a),W=a=>new Map(a),x=a=>[...a?.keys()??[]],H=(a,t)=>a?.get(t),j=(a,t)=>A([...a?.entries()??[]],(([a,e])=>t(e,a))),U=(a,t,e)=>l(e)?(C(a,t),a):a?.set(t,e),Y=(a,t,e)=>(h(a,t)||U(a,t,e()),H(a,t)),k=(a,t,e,s=U)=>(M(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!l(((a,t)=>y(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),q=a=>new Set(Array.isArray(a)||l(a)?a:[a]),G=(a,t)=>a?.add(t),J=m+"*FROM",z="FROM pragma_table_",K="WHERE",V=(a,t,e,i)=>{const o=W();return[async()=>k(o,P(await u(A(await a("SELECT name "+z+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+X(t)+")ORDER BY name",t),(async({name:t})=>[t,P(A(await a(m+" name,type "+z+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>U(o,t,k(Y(o,t,W),e,((a,t,e)=>{e!=H(a,t)&&U(a,t,e)}),((a,t)=>U(a,t))))),((a,t)=>U(o,t))),async(t,e)=>((a,t)=>!l(H(H(o,a),t)))(t,e)?P(O(A(await a(J+T(t)),(a=>{return[a[e],(t={...a},s=e,delete t[s],t)];var t,s})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,c,r,y,w=!1)=>{const E=q();M(c??{},(a=>A(b(a??{}),(a=>G(E,a)))));const d=N(E);if(!w&&y&&L(d)&&h(o,t))return await a("DROP TABLE"+T(t)),void U(o,t);if(L(d)||h(o,t)){const n=H(o,t),i=q(x(n));await u([...A(d,(async e=>{C(i,e)||(await a(`ALTER TABLE${T(t)}ADD${T(e)}`),U(n,e,s))})),...!w&&r?A(N(i),(async s=>{s!=e&&(await a(`ALTER TABLE${T(t)}DROP${T(s)}`),U(n,s))})):[]])}else await a(`CREATE TABLE${T(t)}(${T(e)} PRIMARY KEY ON CONFLICT REPLACE${v(A(d,(a=>n+T(a))))});`),U(o,t,W([[e,s],...A(d,(a=>[a,s]))]));if(w)l(c)?await a("DELETE FROM"+T(t)+"WHERE 1"):await u(M(c,(async(s,n)=>{l(s)?await a("DELETE FROM"+T(t)+K+T(e)+"=?",[n]):L(d)||await Q(a,t,e,b(s),[n,...$(s)],i)})));else if(L(d))h(o,t)&&await a("DELETE FROM"+T(t)+"WHERE 1");else{const s=O(x(H(o,t)),(a=>a!=e)),n=[],i=[];M(c??{},((a,t)=>{R(n,t,...A(s,(t=>a?.[t]))),R(i,t)})),await Q(a,t,e,s,n),await a("DELETE FROM"+T(t)+K+T(e)+"NOT IN("+X(i)+")",i)}},async t=>{let s;await a("BEGIN");try{s=await t()}catch(a){e?.(a)}return await a("END"),s}]},Q=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?s:"OR REPLACE ")+"INTO"+T(t)+"("+T(e)+v(A(i,(a=>n+T(a))))+")VALUES"+E(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+T(e)+")DO UPDATE SET"+v(A(i,(a=>T(a)+"=excluded."+T(a))),n):s),c),X=a=>v(A(a,(()=>"?")),n),Z=JSON.parse,aa=W(),ta=W(),ea=(a,t,e,s,n,i,[o,c]=[],r=[])=>{let w,E,d,u=0,p=0;Y(aa,r,(()=>0)),Y(ta,r,(()=>[]));const f=async a=>(2!=u&&(u=1,await T.schedule((async()=>{await a(),u=0}))),T),T={load:async(e,s)=>await f((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(T.stopAutoLoad(),await T.load(e,n),p=1,d=s((async(e,s)=>{if(s){const t=s();await f((async()=>a.setTransactionChanges(t)))}else await f((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(p&&(n(d),d=void 0,p=0),T),save:async t=>(1!=u&&(u=2,await T.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}u=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),w=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();B(e)&&B(s)||T.save((()=>[e,s]))})),T),stopAutoSave:()=>(y(w,a.delListener),w=void 0,T),schedule:async(...a)=>(R(H(ta,r),...a),await(async()=>{if(!H(aa,r)){for(U(aa,r,1);!l((a=H(ta,r),E=a.shift()));)try{await E()}catch(a){i?.(a)}U(aa,r,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return o&&(T[o]=()=>c),I(T)},sa="store",na=(a,t,e,s,n,[i],o,c,r)=>{const[l,y,w,E]=V(t,o,n);return ea(a,(async()=>await E((async()=>(await l(),Z((await y(i,f))[p]?.[sa]??"null"))))),(async a=>await E((async()=>{var t;await l(),await w(i,f,{[p]:{[sa]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?S.fromEntries([...t]):t)))}},!0,!0)}))),e,s,n,[r,c],c)},ia=(a,t,e,s,n,[i,o,[c,r,y]],w,E,d,T)=>{const[m,v,A,L]=V(t,w,n,T),R=async(a,t)=>await u(j(o,(async([e,s,n,i],o)=>{const c=a[o];t&&void 0===c||await A(e,s,c,n,i,t)}))),h=async(a,t)=>r?await A(y,f,{[p]:a},!0,!0,t):null;return ea(a,(async()=>await L((async()=>{await m();const a=await(async()=>P(O(await u(j(i,(async([a,t],e)=>[a,await v(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>c?(await v(y,f))[p]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await L((async()=>{if(await m(),l(t)){const[t,e]=a();await R(t),await h(e)}else{const[a,e]=t();await R(a,!0),await h(e,!0)}}))),e,s,n,[d,E],E)},oa="json",ca="autoLoadIntervalSeconds",ra="rowIdColumnName",la="tableId",ya="tableName",wa={mode:oa,[ca]:1},Ea={load:0,save:0,[ya]:e+"_values"},da=(a,t,e,s)=>{const n=W();return M(a,((a,i)=>{const o=E($(F(t,w(a)?{[e]:a}:a)),0,_(t));l(o[0])||s(i,o[0])||U(n,i,o)})),n},ua="pragma ",pa="data_version",fa="schema_version",Ta=(a,t,s,n,i,o,c,l,y="getDb",d)=>{let u,p,T;const[v,A,L,O]=(a=>{const t=(a=>F(wa,w(a)?{storeTableName:a}:a??{}))(a),s=t[ca];if(t.mode==oa){const{storeTableName:a=e}=t;return[1,s,[a],q(a)]}const{tables:{load:n={},save:i={}}={},values:o={}}=t,c=E($(F(Ea,o)),0,_(Ea)),r=c[2],l=q(r);return[0,s,[da(n,{[la]:null,[ra]:f},la,(a=>G(l,a)&&a==r)),da(i,{[ya]:null,[ra]:f,deleteEmptyColumns:0,deleteEmptyTable:0},ya,((a,t)=>G(l,t)&&t==r)),c],l]})(t);return(v?na:ia)(a,o?async(a,t)=>(o(a,t),await s(a,t)):s,(a=>{return[(t=async()=>{try{const t=(await s(ua+pa))[0][pa],e=(await s(ua+fa))[0][fa],n=(await s(m+" TOTAL_CHANGES() c"))[0].c;t==(u??=t)&&e==(p??=e)&&n==(T??=n)||(a(),u=t,p=e)}catch{}},e=A,t(),setInterval(t,1e3*e)),n((t=>O.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),u=p=null,i(t)}),c,L,N(O),l,y,d)};a.createCrSqliteWasmPersister=(a,t,e,s,n)=>Ta(a,e,(async(a,e=[])=>await t.execO(a,e)),(a=>t.onUpdate(((t,e,s)=>a(s)))),(a=>a()),s,n,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterCrSqliteWasm={});
