var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=a=>Array.isArray(a),d=(a,t,e)=>a.slice(t,e),p=a=>a.length,E=async a=>c.all(a),f="_",g="_id",m=a=>`"${a.replace(/"/g,'""')}"`,v="SELECT",h=(a,t="")=>a.join(t),A=(a,t)=>a.map(t),C=a=>0==p(a),T=(a,t)=>a.filter(t),O=(a,...t)=>a.push(...t),N=(a,t)=>a?.has(t)??!1,b=a=>[...a?.values()??[]],L=(a,t)=>a?.delete(t),S=Object,R=a=>S.getPrototypeOf(a),D=S.entries,I=S.keys,M=S.freeze,P=(a=[])=>S.fromEntries(a),_=(...a)=>S.assign({},...a),F=(a,t)=>t in a,x=(a,t)=>A(D(a),(([a,e])=>t(e,a))),j=a=>S.values(a),B=a=>p(I(a)),W=a=>(a=>!l(a)&&y(R(a),(a=>a==S.prototype||l(R(a))),(()=>!0)))(a)&&0==B(a),H=a=>new Map(a),U=a=>[...a?.keys()??[]],Y=(a,t)=>a?.get(t),$=(a,t)=>A([...a?.entries()??[]],(([a,e])=>t(e,a))),k=(a,t,e)=>l(e)?(L(a,t),a):a?.set(t,e),q=(a,t,e,n)=>(N(a,t)?n?.(Y(a,t)):k(a,t,e()),Y(a,t)),G=(a,t,e,n=k)=>(x(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>F(t,e)?0:n(a,e))),a),J=a=>new Set(u(a)||l(a)?a:[a]),z=(a,t)=>a?.add(t),K="TABLE",V="ALTER "+K,Q="DELETE FROM",X=v+"*FROM",Z="FROM pragma_table_",aa="WHERE",ta=(a,t,e,i)=>{const o=H();return[async()=>G(o,P(await E(A(await a("SELECT name "+Z+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+na(t)+")ORDER BY name",t),(async({name:t})=>[t,P(A(await a(v+" name,type "+Z+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>k(o,t,G(q(o,t,H),e,((a,t,e)=>{e!=Y(a,t)&&k(a,t,e)}),((a,t)=>k(a,t))))),((a,t)=>k(o,t))),async(t,e)=>((a,t)=>!l(Y(Y(o,a),t)))(t,e)?P(T(A(await a(X+m(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!W(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=J();x(c??{},(a=>A(I(a??{}),(a=>z(u,a)))));const d=b(u);if(!w&&y&&C(d)&&N(o,t))return await a("DROP "+K+m(t)),void k(o,t);if(C(d)||N(o,t)){const s=Y(o,t),i=J(U(s));await E([...A(d,(async e=>{L(i,e)||(await a(V+m(t)+"ADD"+m(e)),k(s,e,n))})),...!w&&r?A(b(i),(async n=>{n!=e&&(await a(V+m(t)+"DROP"+m(n)),k(s,n))})):[]])}else await a("CREATE "+K+m(t)+"("+m(e)+` PRIMARY KEY ON CONFLICT REPLACE${h(A(d,(a=>s+m(a))))});`),k(o,t,H([[e,n],...A(d,(a=>[a,n]))]));if(w)l(c)?await a(Q+m(t)+aa+" 1"):await E(x(c,(async(n,s)=>{l(n)?await a(Q+m(t)+aa+m(e)+"=?",[s]):C(d)||await ea(a,t,e,I(n),[s,...j(n)],i)})));else if(C(d))N(o,t)&&await a(Q+m(t)+aa+" 1");else{const n=T(U(Y(o,t)),(a=>a!=e)),s=[],r=[];x(c??{},((a,t)=>{O(s,t,...A(n,(t=>a?.[t]))),O(r,t)})),await ea(a,t,e,n,s,i),await a(Q+m(t)+aa+m(e)+"NOT IN("+na(r)+")",r)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ea=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+m(t)+"("+m(e)+h(A(i,(a=>s+m(a))))+")VALUES"+d(o(`,(?${o(",?",p(i))})`,p(c)/(p(i)+1)),1)+(r?"ON CONFLICT("+m(e)+")DO UPDATE SET"+h(A(i,(a=>m(a)+"=excluded."+m(a))),s):n),A(c,(a=>a??null))),na=a=>h(A(a,(()=>"?")),s),sa=JSON.parse,ia=H(),oa=H(),ca=(a,t,e,n,s,i,o,c={},r=[])=>{let w,d,p,E=0;q(ia,r,(()=>0)),q(oa,r,(()=>[]));const[f,g,m,v,h]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!W(a)||!W(t),t.setContent]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([[a],[t]])=>!W(a)||!W(t),t.setDefaultContent])(o,a),A=async a=>(2!=E&&(E=1,await T.schedule((async()=>{await a(),E=0}))),T),C=t=>{(f&&u(t?.[0])?1===t?.[2]?a.applyMergeableChanges:a.setMergeableContent:1===t?.[2]?a.applyChanges:a.setContent)(t)},T={load:async a=>await A((async()=>{try{C(await t())}catch(t){i?.(t),a&&h(a)}})),startAutoLoad:async a=>(await T.stopAutoLoad().load(a),d=n((async(a,e)=>{const n=e?.();await A((async()=>{try{C(n??a?.()??await t())}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(d&&(s(d),d=void 0),T),isAutoLoading:()=>!l(d),save:async a=>(1!=E&&(E=2,await T.schedule((async()=>{try{await e(g,a)}catch(a){i?.(a)}E=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),p=a.addDidFinishTransactionListener((()=>{const a=m();v(a)&&T.save((()=>a))})),T),stopAutoSave:()=>(y(p,a.delListener),p=void 0,T),isAutoSaving:()=>!l(p),schedule:async(...a)=>(O(Y(oa,r),...a),await(async()=>{if(!Y(ia,r)){for(k(ia,r,1);!l((a=Y(oa,r),w=a.shift()));)try{await w()}catch(a){i?.(a)}k(ia,r,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({}),...c};return M(T)},ra="store",la=(a,t,e,n,s,[i],o,c,r,l)=>{const[y,w,u,d]=ta(t,o,s,l);return ca(a,(async()=>await d((async()=>(await y(),sa((await w(i,g))[f]?.[ra]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,g,{[f]:{[ra]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?S.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,{[r]:()=>c},c)},ya=(a,t,e,n,s,[i,o,[c,r,y]],w,u,d,p)=>{const[m,v,h,A]=ta(t,w,s,p),C=async(a,t)=>await E($(o,(async([e,n,s,i],o)=>{t&&!F(a,o)||await h(e,n,a[o],s,i,t)}))),O=async(a,t)=>r?await h(y,g,{[f]:a},!0,!0,t):null;return ca(a,(async()=>await A((async()=>{await m();const a=await(async()=>P(T(await E($(i,(async([a,t],e)=>[a,await v(e,t)]))),(a=>!W(a[1])))))(),t=await(async()=>c?(await v(y,g))[f]:{})();return W(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await A((async()=>{if(await m(),l(t)){const[t,e]=a();await C(t),await O(e)}else{const[a,e]=t();await C(a,!0),await O(e,!0)}}))),e,n,s,!1,{[d]:()=>u},u)},wa="json",ua="autoLoadIntervalSeconds",da="rowIdColumnName",pa="tableId",Ea="tableName",fa={mode:wa,[ua]:1},ga={load:0,save:0,[Ea]:e+"_values"},ma=(a,t,e,n)=>{const s=H();return x(a,((a,i)=>{const o=d(j(_(t,w(a)?{[e]:a}:a)),0,B(t));l(o[0])||n(i,o[0])||k(s,i,o)})),s},va="pragma ",ha="data_version",Aa="schema_version",Ca=(a,t,n,s,i,o,c,l,y="getDb",u)=>{let p,E,f;const[m,h,A,C]=(a=>{const t=(a=>_(fa,w(a)?{storeTableName:a}:a??{}))(a),n=t[ua];if(t.mode==wa){const{storeTableName:a=e}=t;return[1,n,[a],J(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=d(j(_(ga,o)),0,B(ga)),r=c[2],l=J(r);return[0,n,[ma(s,{[pa]:null,[da]:g},pa,(a=>z(l,a)&&a==r)),ma(i,{[Ea]:null,[da]:g,deleteEmptyColumns:0,deleteEmptyTable:0},Ea,((a,t)=>z(l,t)&&t==r)),c],l]})(t);return(m?la:ya)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(va+ha))[0][ha],e=(await n(va+Aa))[0][Aa],s=(await n(v+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&e==(E??=e)&&s==(f??=s)||(a(),p=t,E=e)}catch{}},e=h,t(),setInterval(t,1e3*e)),s((t=>C.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),p=E=null,i(t)}),c,A,b(C),l,y,u)};a.createCrSqliteWasmPersister=(a,t,e,n,s)=>Ca(a,e,(async(a,e=[])=>await t.execO(a,e)),(a=>t.onUpdate(((t,e,n)=>a(n)))),(a=>a()),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterCrSqliteWasm={});
