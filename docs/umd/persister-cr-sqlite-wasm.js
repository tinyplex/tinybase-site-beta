var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,E=(a,t,e)=>a.slice(t,e),u=a=>a.length,d=async a=>c.all(a),p="_",f="_id",T=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",g=(a,t="")=>a.join(t),v=(a,t)=>a.map(t),A=a=>0==u(a),C=(a,t)=>a.filter(t),h=(a,...t)=>a.push(...t),L=(a,t)=>a?.has(t)??!1,O=a=>[...a?.values()??[]],R=(a,t)=>a?.delete(t),b=Object,N=a=>b.getPrototypeOf(a),S=b.entries,D=b.keys,M=b.freeze,I=(a=[])=>b.fromEntries(a),P=(...a)=>b.assign({},...a),F=(a,t)=>t in a,$=(a,t)=>v(S(a),(([a,e])=>t(e,a))),_=a=>b.values(a),B=a=>u(D(a)),W=a=>(a=>!l(a)&&y(N(a),(a=>a==b.prototype||l(N(a))),(()=>!0)))(a)&&0==B(a),x=a=>new Map(a),H=a=>[...a?.keys()??[]],j=(a,t)=>a?.get(t),U=(a,t)=>v([...a?.entries()??[]],(([a,e])=>t(e,a))),Y=(a,t,e)=>l(e)?(R(a,t),a):a?.set(t,e),k=(a,t,e,n)=>(L(a,t)?n?.(j(a,t)):Y(a,t,e()),j(a,t)),q=(a,t,e,n=Y)=>($(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>F(t,e)?0:n(a,e))),a),G=a=>new Set(Array.isArray(a)||l(a)?a:[a]),J=(a,t)=>a?.add(t),z=m+"*FROM",K="FROM pragma_table_",V="WHERE",Q=(a,t,e,i)=>{const o=x();return[async()=>q(o,I(await d(v(await a("SELECT name "+K+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+Z(t)+")ORDER BY name",t),(async({name:t})=>[t,I(v(await a(m+" name,type "+K+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>Y(o,t,q(k(o,t,x),e,((a,t,e)=>{e!=j(a,t)&&Y(a,t,e)}),((a,t)=>Y(a,t))))),((a,t)=>Y(o,t))),async(t,e)=>((a,t)=>!l(j(j(o,a),t)))(t,e)?I(C(v(await a(z+T(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!W(t)))):{},async(t,e,c,r,y,w=!1)=>{const E=G();$(c??{},(a=>v(D(a??{}),(a=>J(E,a)))));const u=O(E);if(!w&&y&&A(u)&&L(o,t))return await a("DROP TABLE"+T(t)),void Y(o,t);if(A(u)||L(o,t)){const s=j(o,t),i=G(H(s));await d([...v(u,(async e=>{R(i,e)||(await a(`ALTER TABLE${T(t)}ADD${T(e)}`),Y(s,e,n))})),...!w&&r?v(O(i),(async n=>{n!=e&&(await a(`ALTER TABLE${T(t)}DROP${T(n)}`),Y(s,n))})):[]])}else await a(`CREATE TABLE${T(t)}(${T(e)} PRIMARY KEY ON CONFLICT REPLACE${g(v(u,(a=>s+T(a))))});`),Y(o,t,x([[e,n],...v(u,(a=>[a,n]))]));if(w)l(c)?await a("DELETE FROM"+T(t)+"WHERE 1"):await d($(c,(async(n,s)=>{l(n)?await a("DELETE FROM"+T(t)+V+T(e)+"=?",[s]):A(u)||await X(a,t,e,D(n),[s,..._(n)],i)})));else if(A(u))L(o,t)&&await a("DELETE FROM"+T(t)+"WHERE 1");else{const n=C(H(j(o,t)),(a=>a!=e)),s=[],i=[];$(c??{},((a,t)=>{h(s,t,...v(n,(t=>a?.[t]))),h(i,t)})),await X(a,t,e,n,s),await a("DELETE FROM"+T(t)+V+T(e)+"NOT IN("+Z(i)+")",i)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},X=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+T(t)+"("+T(e)+g(v(i,(a=>s+T(a))))+")VALUES"+E(o(`,(?${o(",?",u(i))})`,u(c)/(u(i)+1)),1)+(r?"ON CONFLICT("+T(e)+")DO UPDATE SET"+g(v(i,(a=>T(a)+"=excluded."+T(a))),s):n),v(c,(a=>a??null))),Z=a=>g(v(a,(()=>"?")),s),aa=JSON.parse,ta=x(),ea=x(),na=a=>w(a?.[0]),sa=(a,t,e,n,s,i,o,[c,r]=[],w=[])=>{let E,u,d,p=0,f=0;k(ta,w,(()=>0)),k(ea,w,(()=>[]));const[T,m,g,v]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!W(a)||!W(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!W(a)||!W(t)])(o,a),A=async a=>(2!=p&&(p=1,await C.schedule((async()=>{await a(),p=0}))),C),C={load:async(e,n)=>await A((async()=>{try{const e=await t();(T&&na(e)?a.setMergeableContent:a.setContent)(e)}catch{a.setContent([e,n])}})),startAutoLoad:async(e={},s={})=>(C.stopAutoLoad(),await C.load(e,s),f=1,d=n((async(e,n)=>{if(n){const t=n();await A((async()=>(T&&na(t)?a.applyMergeableChanges:a.applyChanges)(t)))}else await A((async()=>{try{const n=e?.()??await t();(T&&na(n)?a.setMergeableContent:a.setContent)(n)}catch(a){i?.(a)}}))})),C),stopAutoLoad:()=>(f&&(s(d),d=void 0,f=0),C),save:async a=>(1!=p&&(p=2,await C.schedule((async()=>{try{await e(m,a)}catch(a){i?.(a)}p=0}))),C),startAutoSave:async()=>(await C.stopAutoSave().save(),E=a.addDidFinishTransactionListener((()=>{const a=g();v(a)&&C.save((()=>a))})),C),stopAutoSave:()=>(y(E,a.delListener),E=void 0,C),schedule:async(...a)=>(h(j(ea,w),...a),await(async()=>{if(!j(ta,w)){for(Y(ta,w,1);!l((a=j(ea,w),u=a.shift()));)try{await u()}catch(a){i?.(a)}Y(ta,w,0)}var a})(),C),getStore:()=>a,destroy:()=>C.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(C[c]=()=>r),M(C)},ia="store",oa=(a,t,e,n,s,[i],o,c,r)=>{const[l,y,w,E]=Q(t,o,s);return sa(a,(async()=>await E((async()=>(await l(),aa((await y(i,f))[p]?.[ia]??"null"))))),(async a=>await E((async()=>{var t;await l(),await w(i,f,{[p]:{[ia]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?b.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,[r,c],c)},ca=(a,t,e,n,s,[i,o,[c,r,y]],w,E,u,T)=>{const[m,g,v,A]=Q(t,w,s,T),h=async(a,t)=>await d(U(o,(async([e,n,s,i],o)=>{t&&!F(a,o)||await v(e,n,a[o],s,i,t)}))),L=async(a,t)=>r?await v(y,f,{[p]:a},!0,!0,t):null;return sa(a,(async()=>await A((async()=>{await m();const a=await(async()=>I(C(await d(U(i,(async([a,t],e)=>[a,await g(e,t)]))),(a=>!W(a[1])))))(),t=await(async()=>c?(await g(y,f))[p]:{})();return W(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await A((async()=>{if(await m(),l(t)){const[t,e]=a();await h(t),await L(e)}else{const[a,e]=t();await h(a,!0),await L(e,!0)}}))),e,n,s,!1,[u,E],E)},ra="json",la="autoLoadIntervalSeconds",ya="rowIdColumnName",wa="tableId",Ea="tableName",ua={mode:ra,[la]:1},da={load:0,save:0,[Ea]:e+"_values"},pa=(a,t,e,n)=>{const s=x();return $(a,((a,i)=>{const o=E(_(P(t,w(a)?{[e]:a}:a)),0,B(t));l(o[0])||n(i,o[0])||Y(s,i,o)})),s},fa="pragma ",Ta="data_version",ma="schema_version",ga=(a,t,n,s,i,o,c,l,y="getDb",u)=>{let d,p,T;const[g,v,A,C]=(a=>{const t=(a=>P(ua,w(a)?{storeTableName:a}:a??{}))(a),n=t[la];if(t.mode==ra){const{storeTableName:a=e}=t;return[1,n,[a],G(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=E(_(P(da,o)),0,B(da)),r=c[2],l=G(r);return[0,n,[pa(s,{[wa]:null,[ya]:f},wa,(a=>J(l,a)&&a==r)),pa(i,{[Ea]:null,[ya]:f,deleteEmptyColumns:0,deleteEmptyTable:0},Ea,((a,t)=>J(l,t)&&t==r)),c],l]})(t);return(g?oa:ca)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(fa+Ta))[0][Ta],e=(await n(fa+ma))[0][ma],s=(await n(m+" TOTAL_CHANGES() c"))[0].c;t==(d??=t)&&e==(p??=e)&&s==(T??=s)||(a(),d=t,p=e)}catch{}},e=v,t(),setInterval(t,1e3*e)),s((t=>C.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),d=p=null,i(t)}),c,A,O(C),l,y,u)};a.createCrSqliteWasmPersister=(a,t,e,n,s)=>ga(a,e,(async(a,e=[])=>await t.execO(a,e)),(a=>t.onUpdate(((t,e,n)=>a(n)))),(a=>a()),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterCrSqliteWasm={});
