var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",n="",s=",",i=t(n),o=(a,t)=>a.repeat(t),c=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,u=(a,t,e)=>a.slice(t,e),d=a=>a.length,p=async a=>c.all(a),E="_",f="_id",g=a=>`"${a.replace(/"/g,'""')}"`,m="SELECT",v=(a,t="")=>a.join(t),h=(a,t)=>a.map(t),A=a=>0==d(a),C=(a,t)=>a.filter(t),T=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,N=a=>[...a?.values()??[]],b=(a,t)=>a?.delete(t),L=Object,S=a=>L.getPrototypeOf(a),R=L.entries,D=L.keys,I=L.freeze,M=(a=[])=>L.fromEntries(a),P=(...a)=>L.assign({},...a),_=(a,t)=>t in a,F=(a,t)=>h(R(a),(([a,e])=>t(e,a))),x=a=>L.values(a),j=a=>d(D(a)),B=a=>(a=>!l(a)&&y(S(a),(a=>a==L.prototype||l(S(a))),(()=>!0)))(a)&&0==j(a),W=a=>new Map(a),H=a=>[...a?.keys()??[]],U=(a,t)=>a?.get(t),Y=(a,t)=>h([...a?.entries()??[]],(([a,e])=>t(e,a))),$=(a,t,e)=>l(e)?(b(a,t),a):a?.set(t,e),k=(a,t,e,n)=>(O(a,t)?n?.(U(a,t)):$(a,t,e()),U(a,t)),q=(a,t,e,n=$)=>(F(t,((t,n)=>e(a,n,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>_(t,e)?0:n(a,e))),a),G=a=>new Set(Array.isArray(a)||l(a)?a:[a]),J=(a,t)=>a?.add(t),z="TABLE",K="ALTER "+z,V="DELETE FROM",Q=m+"*FROM",X="FROM pragma_table_",Z="WHERE",aa=(a,t,e,i)=>{const o=W();return[async()=>q(o,M(await p(h(await a("SELECT name "+X+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+ea(t)+")ORDER BY name",t),(async({name:t})=>[t,M(h(await a(m+" name,type "+X+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>$(o,t,q(k(o,t,W),e,((a,t,e)=>{e!=U(a,t)&&$(a,t,e)}),((a,t)=>$(a,t))))),((a,t)=>$(o,t))),async(t,e)=>((a,t)=>!l(U(U(o,a),t)))(t,e)?M(C(h(await a(Q+g(t)),(a=>{return[a[e],(t={...a},n=e,delete t[n],t)];var t,n})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,c,r,y,w=!1)=>{const u=G();F(c??{},(a=>h(D(a??{}),(a=>J(u,a)))));const d=N(u);if(!w&&y&&A(d)&&O(o,t))return await a("DROP "+z+g(t)),void $(o,t);if(A(d)||O(o,t)){const s=U(o,t),i=G(H(s));await p([...h(d,(async e=>{b(i,e)||(await a(K+g(t)+"ADD"+g(e)),$(s,e,n))})),...!w&&r?h(N(i),(async n=>{n!=e&&(await a(K+g(t)+"DROP"+g(n)),$(s,n))})):[]])}else await a("CREATE "+z+g(t)+"("+g(e)+` PRIMARY KEY ON CONFLICT REPLACE${v(h(d,(a=>s+g(a))))});`),$(o,t,W([[e,n],...h(d,(a=>[a,n]))]));if(w)l(c)?await a(V+g(t)+Z+" 1"):await p(F(c,(async(n,s)=>{l(n)?await a(V+g(t)+Z+g(e)+"=?",[s]):A(d)||await ta(a,t,e,D(n),[s,...x(n)],i)})));else if(A(d))O(o,t)&&await a(V+g(t)+Z+" 1");else{const n=C(H(U(o,t)),(a=>a!=e)),s=[],r=[];F(c??{},((a,t)=>{T(s,t,...h(n,(t=>a?.[t]))),T(r,t)})),await ta(a,t,e,n,s,i),await a(V+g(t)+Z+g(e)+"NOT IN("+ea(r)+")",r)}},async t=>{let n;await a("BEGIN");try{n=await t()}catch(a){e?.(a)}return await a("END"),n}]},ta=async(a,t,e,i,c,r=!0)=>await a("INSERT "+(r?n:"OR REPLACE ")+"INTO"+g(t)+"("+g(e)+v(h(i,(a=>s+g(a))))+")VALUES"+u(o(`,(?${o(",?",d(i))})`,d(c)/(d(i)+1)),1)+(r?"ON CONFLICT("+g(e)+")DO UPDATE SET"+v(h(i,(a=>g(a)+"=excluded."+g(a))),s):n),h(c,(a=>a??null))),ea=a=>v(h(a,(()=>"?")),s),na=JSON.parse,sa=W(),ia=W(),oa=(a,t,e,n,s,i,o,c={},r=[])=>{let u,d,p,E=0;k(sa,r,(()=>0)),k(ia,r,(()=>[]));const[f,g,m,v]=((a,t)=>!a||l(t.getMergeableContent)?[0,t.getContent,t.getTransactionChanges,([a,t])=>!B(a)||!B(t)]:[1,t.getMergeableContent,t.getTransactionMergeableChanges,([,[[,a],[,t]]])=>!B(a)||!B(t)])(o,a),h=async a=>(2!=E&&(E=1,await C.schedule((async()=>{await a(),E=0}))),C),A=t=>{(f&&w(t?.[0])?1===t?.[1][2]?a.applyMergeableChanges:a.setMergeableContent:1===t?.[2]?a.applyChanges:a.setContent)(t)},C={load:async(e,n)=>await h((async()=>{try{A(await t())}catch(t){i?.(t),a.setContent([e,n])}})),startAutoLoad:async(a={},e={})=>(await C.stopAutoLoad().load(a,e),d=n((async(a,e)=>{const n=e?.();await h((async()=>{try{A(n??a?.()??await t())}catch(a){i?.(a)}}))})),C),stopAutoLoad:()=>(d&&(s(d),d=void 0),C),isAutoLoading:()=>!l(d),save:async a=>(1!=E&&(E=2,await C.schedule((async()=>{try{await e(g,a)}catch(a){i?.(a)}E=0}))),C),startAutoSave:async()=>(await C.stopAutoSave().save(),p=a.addDidFinishTransactionListener((()=>{const a=m();v(a)&&C.save((()=>a))})),C),stopAutoSave:()=>(y(p,a.delListener),p=void 0,C),isAutoSaving:()=>!l(p),schedule:async(...a)=>(T(U(ia,r),...a),await(async()=>{if(!U(sa,r)){for($(sa,r,1);!l((a=U(ia,r),u=a.shift()));)try{await u()}catch(a){i?.(a)}$(sa,r,0)}var a})(),C),getStore:()=>a,destroy:()=>C.stopAutoLoad().stopAutoSave(),getStats:()=>({}),...c};return I(C)},ca="store",ra=(a,t,e,n,s,[i],o,c,r,l)=>{const[y,w,u,d]=aa(t,o,s,l);return oa(a,(async()=>await d((async()=>(await y(),na((await w(i,f))[E]?.[ca]??"null"))))),(async a=>await d((async()=>{var t;await y(),await u(i,f,{[E]:{[ca]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?L.fromEntries([...t]):t)))}},!0,!0)}))),e,n,s,!1,{[r]:()=>c},c)},la=(a,t,e,n,s,[i,o,[c,r,y]],w,u,d,g)=>{const[m,v,h,A]=aa(t,w,s,g),T=async(a,t)=>await p(Y(o,(async([e,n,s,i],o)=>{t&&!_(a,o)||await h(e,n,a[o],s,i,t)}))),O=async(a,t)=>r?await h(y,f,{[E]:a},!0,!0,t):null;return oa(a,(async()=>await A((async()=>{await m();const a=await(async()=>M(C(await p(Y(i,(async([a,t],e)=>[a,await v(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>c?(await v(y,f))[E]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await A((async()=>{if(await m(),l(t)){const[t,e]=a();await T(t),await O(e)}else{const[a,e]=t();await T(a,!0),await O(e,!0)}}))),e,n,s,!1,{[d]:()=>u},u)},ya="json",wa="autoLoadIntervalSeconds",ua="rowIdColumnName",da="tableId",pa="tableName",Ea={mode:ya,[wa]:1},fa={load:0,save:0,[pa]:e+"_values"},ga=(a,t,e,n)=>{const s=W();return F(a,((a,i)=>{const o=u(x(P(t,w(a)?{[e]:a}:a)),0,j(t));l(o[0])||n(i,o[0])||$(s,i,o)})),s},ma="pragma ",va="data_version",ha="schema_version",Aa=(a,t,n,s,i,o,c,l,y="getDb",d)=>{let p,E,g;const[v,h,A,C]=(a=>{const t=(a=>P(Ea,w(a)?{storeTableName:a}:a??{}))(a),n=t[wa];if(t.mode==ya){const{storeTableName:a=e}=t;return[1,n,[a],G(a)]}const{tables:{load:s={},save:i={}}={},values:o={}}=t,c=u(x(P(fa,o)),0,j(fa)),r=c[2],l=G(r);return[0,n,[ga(s,{[da]:null,[ua]:f},da,(a=>J(l,a)&&a==r)),ga(i,{[pa]:null,[ua]:f,deleteEmptyColumns:0,deleteEmptyTable:0},pa,((a,t)=>J(l,t)&&t==r)),c],l]})(t);return(v?ra:la)(a,o?async(a,t)=>(o(a,t),await n(a,t)):n,(a=>{return[(t=async()=>{try{const t=(await n(ma+va))[0][va],e=(await n(ma+ha))[0][ha],s=(await n(m+" TOTAL_CHANGES() c"))[0].c;t==(p??=t)&&e==(E??=e)&&s==(g??=s)||(a(),p=t,E=e)}catch{}},e=h,t(),setInterval(t,1e3*e)),s((t=>C.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),p=E=null,i(t)}),c,A,N(C),l,y,d)};a.createCrSqliteWasmPersister=(a,t,e,n,s)=>Aa(a,e,(async(a,e=[])=>await t.execO(a,e)),(a=>t.onUpdate(((t,e,n)=>a(n)))),(a=>a()),n,s,t)},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterCrSqliteWasm={});
