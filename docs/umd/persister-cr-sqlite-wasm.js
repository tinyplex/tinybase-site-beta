var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",s=",",n=t(""),i=(a,t="")=>a.join(t),o=(a,t)=>a.map(t),c=a=>a.length,r=a=>0==c(a),l=(a,t)=>a.filter(t),y=(a,t,e)=>a.slice(t,e),u=(a,...t)=>a.push(...t),d=Promise,w=JSON.parse,E=(a,t)=>a instanceof t,p=a=>null==a,f=(a,t,e)=>p(a)?e?.():t(a),m=a=>t(a)==n,v=async a=>d.all(a),T=(a,t)=>a?.has(t)??!1,A=a=>[...a?.values()??[]],h=(a,t)=>a?.delete(t),L=Object,C=L.keys,S=L.freeze,N=(a=[])=>L.fromEntries(a),O=(...a)=>L.assign({},...a),R=(a,t)=>(delete a[t],a),b=(a,t)=>o(L.entries(a),(([a,e])=>t(e,a))),g=a=>L.values(a),I=a=>c(C(a)),D=a=>(a=>E(a,L)&&a.constructor==L)(a)&&0==I(a),$=a=>new Map(a),_=a=>[...a?.keys()??[]],P=(a,t)=>a?.get(t),F=(a,t)=>o([...a?.entries()??[]],(([a,e])=>t(e,a))),M=(a,t,e)=>p(e)?(h(a,t),a):a?.set(t,e),x=(a,t,e,s=M)=>(b(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!p(((a,t)=>f(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),B="_id",j=a=>`"${a.replace(/"/g,'""')}"`,W=a=>new Set(Array.isArray(a)||p(a)?a:[a]),U=(a,t)=>a?.add(t),k="SELECT*FROM",q="FROM pragma_table_",H="WHERE",J=(a,t)=>{const e=$(),n=(a,t)=>!p(P(P(e,a),t)),y=async(t,n,y,d,w)=>{const E=W();b(w??{},(a=>o(C(a),(a=>U(E,a)))));const p=A(E);if(r(p)&&T(e,t)&&d)return await a("DROP TABLE"+j(t)),void M(e,t);if(r(p)||T(e,t)){const s=P(e,t),i=W(_(s));await v([...o(p,(async e=>{h(i,e)||(await a(`ALTER TABLE${j(t)}ADD${j(e)}`),M(s,e,""))})),...y?o(A(i),(async e=>{e!=n&&(await a(`ALTER TABLE${j(t)}DROP${j(e)}`),M(s,e))})):[]])}else await a(`CREATE TABLE${j(t)}(${j(n)} PRIMARY KEY ON CONFLICT REPLACE${i(o(p,(a=>s+j(a))))});`),M(e,t,$([[n,""],...o(p,(a=>[a,""]))]));if(r(p))T(e,t)&&await a("DELETE FROM"+j(t));else{const r=[],y=[],d=[],E=l(_(P(e,t)),(a=>a!=n));b(w,((a,t)=>{var e;u(r,`(?${e=c(E),",?".repeat(e)})`),u(y,t,...o(E,(t=>a[t]))),u(d,t)})),await a("INSERT INTO"+j(t)+"("+j(n)+i(o(E,(a=>s+j(a))))+")VALUES"+i(r,s)+"ON CONFLICT("+j(n)+")DO UPDATE SET"+i(o(E,(a=>j(a)+"=excluded."+j(a))),s),y),await a("DELETE FROM"+j(t)+H+j(n)+"NOT IN("+Y(d)+")",d)}};return[async()=>x(e,N(await v(o(await a("SELECT name "+q+"list WHERE schema='main'AND type='table'AND name IN("+Y(t)+")",t),(async({name:t})=>[t,N(o(await a("SELECT name,type "+q+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,s)=>{return M(e,t,x((o=$,T(n=e,i=t)||M(n,i,o()),P(n,i)),s,((a,t,e)=>{e!=P(a,t)&&M(a,t,e)}),((a,t)=>M(a,t))));var n,i,o}),((a,t)=>M(e,t))),async(t,e)=>{const s=n(t,e)?await a(k+j(t)+H+j(e)+"=?",["_"]):[];return r(s)?null:R(s[0],e)},async(a,t,e,s)=>await y(a,t,!0,!0,{[e]:s}),async(t,e)=>n(t,e)?N(l(o(await a(k+j(t)),(a=>[a[e],R({...a},e)])),(([a,t])=>!p(a)&&!D(t)))):{},y]},Y=a=>i(o(a,(()=>"?")),s),z=(a,t,e,s,n)=>{let i,o,c,r=0,l=0,y=0;const d=[],w=async a=>(2!=r&&(r=1,await E.schedule((async()=>{await a(),r=0}))),E),E={load:async(e,s)=>await w((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(E.stopAutoLoad(),await E.load(e,n),y=1,c=s((async(e,s)=>await w((async()=>{if(s)a.setTransactionChanges(s());else try{a.setContent(e?.()??await t())}catch{}})))),E),stopAutoLoad:()=>(y&&(n(c),c=void 0,y=0),E),save:async t=>(1!=r&&(r=2,await E.schedule((async()=>{try{await e(a.getContent,t)}catch{}r=0}))),E),startAutoSave:async()=>(await E.stopAutoSave().save(),i=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();D(e)&&D(s)||E.save((()=>[e,s]))})),E),stopAutoSave:()=>(f(i,a.delListener),E),schedule:async(...a)=>(u(d,...a),await(async()=>{if(!l){for(l=1;!p((a=d,o=a.shift()));)try{await o()}catch{}l=0}var a})(),E),getStore:()=>a,destroy:()=>E.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return S(E)},K="store",V=(a,t,e,s,[n],i)=>{const[o,c,r]=J(t,i),l=z(a,(async()=>(await o(),w((await c(n,B)??{})[K]))),(async a=>l.schedule(o,(async()=>{var t;await r(n,B,"_",{[K]:(t=a(),JSON.stringify(t,((a,t)=>{return E(t,Map)?(e=(a,[t,e])=>(a[t]=e,a),s={},[...t].reduce(e,s)):t;var e,s})))})}))),e,s);return l},G=(a,t,e,s,[n,i,[o,c,r]],y)=>{const[u,d,w,E,f]=J(t,y);return z(a,(async()=>{await u();const a=await(async()=>N(l(await v(F(n,(async([a,t],e)=>[a,await E(e,t)]))),(a=>!D(a[1])))))(),t=await(async()=>o?await d(r,B):{})();return D(a)&&p(t)?void 0:[a,t]}),(async a=>{const[t,e]=a();await u(),await(async a=>await v(F(i,(async([t,e,s,n],i)=>await f(t,e,s,n,a[i])))))(t),await(async a=>c?await w(r,B,"_",a):null)(e)}),e,s)},Q="json",X="autoLoadIntervalSeconds",Z="rowIdColumnName",aa="tableId",ta="tableName",ea={mode:Q,[X]:1},sa={load:0,save:0,[ta]:e+"_values"},na=(a,t,e,s)=>{const n=$();return b(a,((a,i)=>{const o=y(g(O(t,m(a)?{[e]:a}:a)),0,I(t));p(o[0])||s(i,o[0])||M(n,i,o)})),n},ia="pragma ",oa="data_version",ca="schema_version",ra=(a,t,s,n,i)=>{let o,c;const[r,l,u,d]=(a=>{const t=(a=>O(ea,m(a)?{storeTableName:a}:a??{}))(a),s=t[X];if(t.mode==Q){const{storeTableName:a=e}=t;return[1,s,[a],W(a)]}const{tables:{load:n={},save:i={}}={},values:o={}}=t,c=y(g(O(sa,o)),0,I(sa)),r=c[2],l=W(r);return[0,s,[na(n,{[aa]:null,[Z]:B},aa,(a=>U(l,a)&&a==r)),na(i,{[ta]:null,[Z]:B,deleteEmptyColumns:0,deleteEmptyTable:0},ta,((a,t)=>U(l,t)&&t==r)),c],l]})(t);return(r?V:G)(a,s,(a=>[setInterval((async()=>{try{const t=(await s(ia+oa))[0][oa],e=(await s(ia+ca))[0][ca];t==(o??=t)&&e==(c??=e)||(a(),o=t,c=e)}catch{}}),1e3*l),n((t=>d.has(t)?a():0))]),(([a,t])=>{clearInterval(a),o=c=null,i(t)}),u,A(d))};a.createCrSqliteWasmPersister=(a,t,e)=>ra(a,e,(async(a,e=[])=>await t.execO(a,e)),(a=>t.onUpdate(((t,e,s)=>a(s)))),(a=>a()))},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterCrSqliteWasm={});
