var t,e;t=this,e=function(t){"use strict";const e=t=>typeof t,a=e(""),s=clearInterval,n=t=>null==t,o=(t,e,a)=>n(t)?a?.():e(t),r=Object,i=t=>r.getPrototypeOf(t),c=r.keys,y=r.freeze,d=t=>(t=>!n(t)&&o(i(t),(t=>t==r.prototype||n(i(t))),(()=>!0)))(t)&&0==(t=>c(t).length)(t),l=JSON.parse,p=t=>new Map(t),g=(t,e)=>t?.get(e),u=(t,e,a)=>{return n(a)?(s=t,o=e,s?.delete(o),t):t?.set(e,a);var s,o},h=(t,e,a,s)=>{var n,o;return n=t,o=e,n?.has(o)?s?.(g(t,e)):u(t,e,a()),g(t,e)},f=p(),v=p(),w=t=>t.headers.get("ETag");t.createRemotePersister=(t,i,c,p=5,A)=>{let C;return((t,s,r,i,c,l,p,w={},A=[])=>{let C,b,S,T=0;h(f,A,(()=>0)),h(v,A,(()=>[]));const[m,L,M,O]=((t,e)=>!t||n(e.getMergeableContent)?[0,e.getContent,e.getTransactionChanges,([t,e])=>!d(t)||!d(e)]:[1,e.getMergeableContent,e.getTransactionMergeableChanges,([,[[,t],[,e]]])=>!d(t)||!d(e)])(p,t),x=async t=>(2!=T&&(T=1,await j.schedule((async()=>{await t(),T=0}))),j),P=s=>{var n;(m&&(n=s?.[0],e(n)==a)?1===s?.[1][2]?t.applyMergeableChanges:t.setMergeableContent:1===s?.[2]?t.applyChanges:t.setContent)(s)},j={load:async(e,a)=>await x((async()=>{try{P(await s())}catch(s){l?.(s),t.setContent([e,a])}})),startAutoLoad:async(t={},e={})=>(await j.stopAutoLoad().load(t,e),b=i((async(t,e)=>{const a=e?.();await x((async()=>{try{P(a??t?.()??await s())}catch(t){l?.(t)}}))})),j),stopAutoLoad:()=>(b&&(c(b),b=void 0),j),isAutoLoading:()=>!n(b),save:async t=>(1!=T&&(T=2,await j.schedule((async()=>{try{await r(L,t)}catch(t){l?.(t)}T=0}))),j),startAutoSave:async()=>(await j.stopAutoSave().save(),S=t.addDidFinishTransactionListener((()=>{const t=M();O(t)&&j.save((()=>t))})),j),stopAutoSave:()=>(o(S,t.delListener),S=void 0,j),isAutoSaving:()=>!n(S),schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(g(v,A),...t),await(async()=>{if(!g(f,A)){for(u(f,A,1);!n((t=g(v,A),C=t.shift()));)try{await C()}catch(t){l?.(t)}u(f,A,0)}var t})(),j),getStore:()=>t,destroy:()=>j.stopAutoLoad().stopAutoSave(),getStats:()=>({}),...w};return y(j)})(t,(async()=>{const t=await fetch(i);return C=w(t),l(await t.text())}),(async t=>{return await fetch(c,{method:"POST",headers:{"Content-Type":"application/json"},body:(e=t(),JSON.stringify(e,((t,e)=>e instanceof Map?r.fromEntries([...e]):e)))});var e}),(t=>setInterval((async()=>{const e=await fetch(i,{method:"HEAD"}),a=w(e);n(C)||n(a)||a==C||(C=a,t())}),1e3*p)),(t=>s(t)),A,!1,{getUrls:()=>[i,c]})}},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterRemote={});
