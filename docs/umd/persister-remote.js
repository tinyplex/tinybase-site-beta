var t,e;t=this,e=function(t){"use strict";const e=t=>typeof t,a=e(""),n=clearInterval,s=t=>null==t,o=(t,e,a)=>s(t)?a?.():e(t),r=Object,c=t=>r.getPrototypeOf(t),i=r.keys,y=r.freeze,l=t=>(t=>!s(t)&&o(c(t),(t=>t==r.prototype||s(c(t))),(()=>!0)))(t)&&0==(t=>i(t).length)(t),d=JSON.parse,p=t=>new Map(t),g=(t,e)=>t?.get(e),h=(t,e,a)=>{return s(a)?(n=t,o=e,n?.delete(o),t):t?.set(e,a);var n,o},u=(t,e,a,n)=>{var s,o;return s=t,o=e,s?.has(o)?n?.(g(t,e)):h(t,e,a()),g(t,e)},f=p(),w=p(),v=t=>{return n=t?.[0],e(n)==a;var n},C=t=>t.headers.get("ETag");t.createRemotePersister=(t,e,a,c=5,i)=>{let p;return((t,e,a,n,r,c,i,[d,p]=[],C=[])=>{let b,A,S,T=0,M=0;u(f,C,(()=>0)),u(w,C,(()=>[]));const[m,L,O,x]=((t,e)=>!t||s(e.getMergeableContent)?[0,e.getContent,e.getTransactionChanges,([t,e])=>!l(t)||!l(e)]:[1,e.getMergeableContent,e.getTransactionMergeableChanges,([,[[,t],[,e]]])=>!l(t)||!l(e)])(i,t),P=async t=>(2!=T&&(T=1,await j.schedule((async()=>{await t(),T=0}))),j),j={load:async(a,n)=>await P((async()=>{try{const a=await e();(m&&v(a)?t.setMergeableContent:t.setContent)(a)}catch{t.setContent([a,n])}})),startAutoLoad:async(a={},s={})=>(j.stopAutoLoad(),await j.load(a,s),M=1,S=n((async(a,n)=>{if(n){const e=n();await P((async()=>(m&&v(e)?t.applyMergeableChanges:t.applyChanges)(e)))}else await P((async()=>{try{const n=a?.()??await e();(m&&v(n)?t.setMergeableContent:t.setContent)(n)}catch(t){c?.(t)}}))})),j),stopAutoLoad:()=>(M&&(r(S),S=void 0,M=0),j),save:async t=>(1!=T&&(T=2,await j.schedule((async()=>{try{await a(L,t)}catch(t){c?.(t)}T=0}))),j),startAutoSave:async()=>(await j.stopAutoSave().save(),b=t.addDidFinishTransactionListener((()=>{const t=O();x(t)&&j.save((()=>t))})),j),stopAutoSave:()=>(o(b,t.delListener),b=void 0,j),schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(g(w,C),...t),await(async()=>{if(!g(f,C)){for(h(f,C,1);!s((t=g(w,C),A=t.shift()));)try{await A()}catch(t){c?.(t)}h(f,C,0)}var t})(),j),getStore:()=>t,destroy:()=>j.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return d&&(j[d]=()=>p),y(j)})(t,(async()=>{const t=await fetch(e);return p=C(t),d(await t.text())}),(async t=>{return await fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:(e=t(),JSON.stringify(e,((t,e)=>e instanceof Map?r.fromEntries([...e]):e)))});var e}),(t=>setInterval((async()=>{const a=await fetch(e,{method:"HEAD"}),n=C(a);s(p)||s(n)||n==p||(p=n,t())}),1e3*c)),(t=>n(t)),i,!1,["getUrls",[e,a]])}},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterRemote={});
