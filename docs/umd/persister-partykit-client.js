var t,e;t=this,e=function(t){"use strict";const e=t=>typeof t,a="",s=e(a),o=t=>null==t,n=(t,e,a)=>o(t)?a?.():e(t),r=t=>e(t)==s,i=t=>t.length,c=Object,y=t=>c.getPrototypeOf(t),d=c.keys,l=c.freeze,p=t=>(t=>!o(t)&&n(y(t),(t=>t==c.prototype||o(y(t))),(()=>!0)))(t)&&0==(t=>i(d(t)))(t),u=t=>JSON.stringify(t,((t,e)=>e instanceof Map?c.fromEntries([...e]):e)),g=JSON.parse,h="/store",f=t=>new Map(t),v=(t,e)=>t?.get(e),w=(t,e,a)=>{return o(a)?(s=t,n=e,s?.delete(n),t):t?.set(e,a);var s,n},C=(t,e,a,s)=>{var o,n;return o=t,n=e,o?.has(n)?s?.(v(t,e)):w(t,e,a()),v(t,e)},A=f(),b=f(),m="message";t.createPartyKitPersister=(t,e,s,c)=>{const{host:y,room:d}=e.partySocketOptions,{storeProtocol:f="https",storePath:P=h,messagePrefix:S=a}={...r(s)?{storeProtocol:s}:s},L=f+"://"+y+"/parties/"+e.name+"/"+d+P,M=async t=>await(await fetch(L,{...t?{method:"PUT",body:u(t)}:{},mode:"cors",cache:"no-store"})).json();return((t,e,a,s,r,i,c,y={},d=[])=>{let u,g,h,f=0;C(A,d,(()=>0)),C(b,d,(()=>[]));const[m,P,S,L,M]=((t,e)=>!t||o(e.getMergeableContent)?[0,e.getContent,e.getTransactionChanges,([t,e])=>!p(t)||!p(e),e.setContent]:[1,e.getMergeableContent,e.getTransactionMergeableChanges,([[t],[e]])=>!p(t)||!p(e),e.setDefaultContent])(c,t),T=async t=>(2!=f&&(f=1,await x.schedule((async()=>{await t(),f=0}))),x),O=e=>{var a;(m&&(a=e?.[0],Array.isArray(a))?1===e?.[2]?t.applyMergeableChanges:t.setMergeableContent:1===e?.[2]?t.applyChanges:t.setContent)(e)},x={load:async t=>await T((async()=>{try{O(await e())}catch(e){i?.(e),t&&M(t)}})),startAutoLoad:async t=>(await x.stopAutoLoad().load(t),g=s((async(t,a)=>{const s=a?.();await T((async()=>{try{O(s??t?.()??await e())}catch(t){i?.(t)}}))})),x),stopAutoLoad:()=>(g&&(r(g),g=void 0),x),isAutoLoading:()=>!o(g),save:async t=>(1!=f&&(f=2,await x.schedule((async()=>{try{await a(P,t)}catch(t){i?.(t)}f=0}))),x),startAutoSave:async()=>(await x.stopAutoSave().save(),h=t.addDidFinishTransactionListener((()=>{const t=S();L(t)&&x.save((()=>t))})),x),stopAutoSave:()=>(n(h,t.delListener),h=void 0,x),isAutoSaving:()=>!o(h),schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(v(b,d),...t),await(async()=>{if(!v(A,d)){for(w(A,d,1);!o((t=v(b,d),u=t.shift()));)try{await u()}catch(t){i?.(t)}w(A,d,0)}var t})(),x),getStore:()=>t,destroy:()=>x.stopAutoLoad().stopAutoSave(),getStats:()=>({}),...y};return l(x)})(t,(async()=>await M()),(async(t,a)=>{var s,o;a?e.send((s=S,o=a(),s+"s"+(r(o)?o:u(o)))):await M(t())}),(t=>{const a=e=>n(((t,e,a)=>{const s=i(t);return((t,e)=>t.startsWith(e))(e,t)?[e[s],g((o=e,n=s+1,o.slice(n,void 0)))]:void 0;var o,n})(S,e.data),(([e,a])=>{"s"==e&&t(void 0,(()=>a))}));return e.addEventListener(m,a),a}),(t=>{e.removeEventListener(m,t)}),c,!1,{getConnection:()=>e})}},"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterPartyKitClient={});
