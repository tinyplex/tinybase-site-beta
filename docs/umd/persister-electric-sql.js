var a,t;a=this,t=function(a){"use strict";const t=a=>typeof a,e="tinybase",s="",n=",",i=t(s),c=(a,t)=>a.repeat(t),o=Promise,r=clearInterval,l=a=>null==a,y=(a,t,e)=>l(a)?e?.():t(a),w=a=>t(a)==i,E=(a,t,e)=>a.slice(t,e),u=a=>a.length,d=async a=>o.all(a),f="_",p="_id",T=a=>`"${a.replace(/"/g,'""')}"`,v="SELECT",m=(a,t="")=>a.join(t),A=(a,t)=>a.map(t),L=a=>0==u(a),h=(a,t)=>a.filter(t),R=(a,...t)=>a.push(...t),O=(a,t)=>a?.has(t)??!1,N=a=>[...a?.values()??[]],C=(a,t)=>a?.delete(t),b=Object,g=a=>b.getPrototypeOf(a),S=b.entries,D=b.keys,I=b.freeze,P=(a=[])=>b.fromEntries(a),F=(...a)=>b.assign({},...a),M=(a,t)=>A(S(a),(([a,e])=>t(e,a))),$=a=>b.values(a),_=a=>u(D(a)),B=a=>(a=>!l(a)&&y(g(a),(a=>a==b.prototype||l(g(a))),(()=>!0)))(a)&&0==_(a),H=a=>new Map(a),j=a=>[...a?.keys()??[]],x=(a,t)=>a?.get(t),W=(a,t)=>A([...a?.entries()??[]],(([a,e])=>t(e,a))),q=(a,t,e)=>l(e)?(C(a,t),a):a?.set(t,e),Y=(a,t,e)=>(O(a,t)||q(a,t,e()),x(a,t)),k=(a,t,e,s=q)=>(M(t,((t,s)=>e(a,s,t))),((a,t)=>{((a,t)=>{a?.forEach(t)})(a,((a,e)=>t(e)))})(a,(e=>((a,t)=>!l(((a,t)=>y(a,(a=>a[t])))(a,t)))(t,e)?0:s(a,e))),a),G=a=>new Set(Array.isArray(a)||l(a)?a:[a]),J=(a,t)=>a?.add(t),U=v+"*FROM",z="FROM pragma_table_",K="WHERE",V=(a,t,e,i)=>{const c=H();return[async()=>k(c,P(await d(A(await a("SELECT name "+z+"list WHERE schema='main'AND(type='table'OR type='view')AND name IN("+X(t)+")ORDER BY name",t),(async({name:t})=>[t,P(A(await a(v+" name,type "+z+"info(?)",[t]),(({name:a,type:t})=>[a,t])))])))),((a,t,e)=>q(c,t,k(Y(c,t,H),e,((a,t,e)=>{e!=x(a,t)&&q(a,t,e)}),((a,t)=>q(a,t))))),((a,t)=>q(c,t))),async(t,e)=>((a,t)=>!l(x(x(c,a),t)))(t,e)?P(h(A(await a(U+T(t)),(a=>{return[a[e],(t={...a},s=e,delete t[s],t)];var t,s})),(([a,t])=>!l(a)&&!B(t)))):{},async(t,e,o,r,y,w=!1)=>{const E=G();M(o??{},(a=>A(D(a??{}),(a=>J(E,a)))));const u=N(E);if(!w&&y&&L(u)&&O(c,t))return await a("DROP TABLE"+T(t)),void q(c,t);if(L(u)||O(c,t)){const n=x(c,t),i=G(j(n));await d([...A(u,(async e=>{C(i,e)||(await a(`ALTER TABLE${T(t)}ADD${T(e)}`),q(n,e,s))})),...!w&&r?A(N(i),(async s=>{s!=e&&(await a(`ALTER TABLE${T(t)}DROP${T(s)}`),q(n,s))})):[]])}else await a(`CREATE TABLE${T(t)}(${T(e)} PRIMARY KEY ON CONFLICT REPLACE${m(A(u,(a=>n+T(a))))});`),q(c,t,H([[e,s],...A(u,(a=>[a,s]))]));if(w)l(o)?await a("DELETE FROM"+T(t)+"WHERE 1"):await d(M(o,(async(s,n)=>{l(s)?await a("DELETE FROM"+T(t)+K+T(e)+"=?",[n]):L(u)||await Q(a,t,e,D(s),[n,...$(s)],i)})));else if(L(u))O(c,t)&&await a("DELETE FROM"+T(t)+"WHERE 1");else{const s=h(j(x(c,t)),(a=>a!=e)),n=[],i=[];M(o??{},((a,t)=>{R(n,t,...A(s,(t=>a?.[t]))),R(i,t)})),await Q(a,t,e,s,n),await a("DELETE FROM"+T(t)+K+T(e)+"NOT IN("+X(i)+")",i)}},async t=>{let s;await a("BEGIN");try{s=await t()}catch(a){e?.(a)}return await a("END"),s}]},Q=async(a,t,e,i,o,r=!0)=>await a("INSERT "+(r?s:"OR REPLACE ")+"INTO"+T(t)+"("+T(e)+m(A(i,(a=>n+T(a))))+")VALUES"+E(c(`,(?${c(",?",u(i))})`,u(o)/(u(i)+1)),1)+(r?"ON CONFLICT("+T(e)+")DO UPDATE SET"+m(A(i,(a=>T(a)+"=excluded."+T(a))),n):s),o),X=a=>m(A(a,(()=>"?")),n),Z=JSON.parse,aa=H(),ta=H(),ea=(a,t,e,s,n,i,[c,o]=[],r=[])=>{let w,E,u,d=0,f=0;Y(aa,r,(()=>0)),Y(ta,r,(()=>[]));const p=async a=>(2!=d&&(d=1,await T.schedule((async()=>{await a(),d=0}))),T),T={load:async(e,s)=>await p((async()=>{try{a.setContent(await t())}catch{a.setContent([e,s])}})),startAutoLoad:async(e={},n={})=>(T.stopAutoLoad(),await T.load(e,n),f=1,u=s((async(e,s)=>{if(s){const t=s();await p((async()=>a.setTransactionChanges(t)))}else await p((async()=>{try{a.setContent(e?.()??await t())}catch(a){i?.(a)}}))})),T),stopAutoLoad:()=>(f&&(n(u),u=void 0,f=0),T),save:async t=>(1!=d&&(d=2,await T.schedule((async()=>{try{await e(a.getContent,t)}catch(a){i?.(a)}d=0}))),T),startAutoSave:async()=>(await T.stopAutoSave().save(),w=a.addDidFinishTransactionListener(((a,t)=>{const[e,s]=t();B(e)&&B(s)||T.save((()=>[e,s]))})),T),stopAutoSave:()=>(y(w,a.delListener),w=void 0,T),schedule:async(...a)=>(R(x(ta,r),...a),await(async()=>{if(!x(aa,r)){for(q(aa,r,1);!l((a=x(ta,r),E=a.shift()));)try{await E()}catch(a){i?.(a)}q(aa,r,0)}var a})(),T),getStore:()=>a,destroy:()=>T.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(T[c]=()=>o),I(T)},sa="store",na=(a,t,e,s,n,[i],c,o,r)=>{const[l,y,w,E]=V(t,c,n);return ea(a,(async()=>await E((async()=>(await l(),Z((await y(i,p))[f]?.[sa]??"null"))))),(async a=>await E((async()=>{var t;await l(),await w(i,p,{[f]:{[sa]:(t=a()??null,JSON.stringify(t,((a,t)=>t instanceof Map?b.fromEntries([...t]):t)))}},!0,!0)}))),e,s,n,[r,o],o)},ia=(a,t,e,s,n,[i,c,[o,r,y]],w,E,u,T)=>{const[v,m,A,L]=V(t,w,n,T),R=async(a,t)=>await d(W(c,(async([e,s,n,i],c)=>{const o=a[c];t&&void 0===o||await A(e,s,o,n,i,t)}))),O=async(a,t)=>r?await A(y,p,{[f]:a},!0,!0,t):null;return ea(a,(async()=>await L((async()=>{await v();const a=await(async()=>P(h(await d(W(i,(async([a,t],e)=>[a,await m(e,t)]))),(a=>!B(a[1])))))(),t=await(async()=>o?(await m(y,p))[f]:{})();return B(a)&&l(t)?void 0:[a,t]}))),(async(a,t)=>await L((async()=>{if(await v(),l(t)){const[t,e]=a();await R(t),await O(e)}else{const[a,e]=t();await R(a,!0),await O(e,!0)}}))),e,s,n,[u,E],E)},ca="json",oa="autoLoadIntervalSeconds",ra="rowIdColumnName",la="tableId",ya="tableName",wa={mode:ca,[oa]:1},Ea={load:0,save:0,[ya]:e+"_values"},ua=(a,t,e,s)=>{const n=H();return M(a,((a,i)=>{const c=E($(F(t,w(a)?{[e]:a}:a)),0,_(t));l(c[0])||s(i,c[0])||q(n,i,c)})),n},da="pragma ",fa="data_version",pa="schema_version",Ta=(a,t,s,n,i,c,o,l,y="getDb",u)=>{let d,f,T;const[m,A,L,h]=(a=>{const t=(a=>F(wa,w(a)?{storeTableName:a}:a??{}))(a),s=t[oa];if(t.mode==ca){const{storeTableName:a=e}=t;return[1,s,[a],G(a)]}const{tables:{load:n={},save:i={}}={},values:c={}}=t,o=E($(F(Ea,c)),0,_(Ea)),r=o[2],l=G(r);return[0,s,[ua(n,{[la]:null,[ra]:p},la,(a=>J(l,a)&&a==r)),ua(i,{[ya]:null,[ra]:p,deleteEmptyColumns:0,deleteEmptyTable:0},ya,((a,t)=>J(l,t)&&t==r)),o],l]})(t);return(m?na:ia)(a,c?async(a,t)=>(c(a,t),await s(a,t)):s,(a=>{return[(t=async()=>{try{const t=(await s(da+fa))[0][fa],e=(await s(da+pa))[0][pa],n=(await s(v+" TOTAL_CHANGES() c"))[0].c;t==(d??=t)&&e==(f??=e)&&n==(T??=n)||(a(),d=t,f=e)}catch{}},e=A,t(),setInterval(t,1e3*e)),n((t=>h.has(t)?a():0))];var t,e}),(([a,t])=>{r(a),d=f=null,i(t)}),o,L,N(h),l,y,u)};a.createElectricSqlPersister=(a,t,e,s,n)=>Ta(a,e,(async(a,e=[])=>await t.db.raw({sql:a,args:e})),(a=>t.notifier.subscribeToDataChanges((e=>{return s=({tablename:t})=>a(t),t.notifier.alias(e).forEach(s);var s}))),(a=>a()),s,n,t,"getElectricClient")},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((a="undefined"!=typeof globalThis?globalThis:a||self).TinyBasePersisterElectricSql={});
