var t,e;t=this,e=function(t,e,a){"use strict";const s="utf8",n=JSON.parse,r=(t,e)=>t instanceof e,o=t=>null==t,i=Object,c=i.keys,u=i.freeze,d=t=>(t=>r(t,i)&&t.constructor==i)(t)&&0==(t=>c(t).length)(t);t.createFilePersister=(t,i)=>((t,n,c,f,y)=>{let l,p,h,w=0,v=0,g=0;const A=[],S=async t=>(2!=w&&(w=1,await L.schedule((async()=>{await t(),w=0}))),L),L={load:async(e,a)=>await S((async()=>{try{t.setContent(await n())}catch{t.setContent([e,a])}})),startAutoLoad:async(a={},s={})=>{return L.stopAutoLoad(),await L.load(a,s),g=1,r=async(e,a)=>await S((async()=>{if(a)t.setTransactionChanges(a());else try{t.setContent(e?.()??await n())}catch{}})),h=e.watch(i,(()=>r())),L;var r},stopAutoLoad:()=>{return g&&(t=h,t?.close(),h=void 0,g=0),L;var t},save:async e=>(1!=w&&(w=2,await L.schedule((async()=>{try{await(async t=>{return await a.writeFile(i,(e=t(),JSON.stringify(e,((t,e)=>{return r(e,Map)?(a=(t,[e,a])=>(t[e]=a,t),s={},[...e].reduce(a,s)):e;var a,s}))),s);var e})(t.getContent)}catch{}w=0}))),L),startAutoSave:async()=>(await L.stopAutoSave().save(),l=t.addDidFinishTransactionListener(((t,e)=>{const[a,s]=e();d(a)&&d(s)||L.save((()=>[a,s]))})),L),stopAutoSave:()=>{var e,a;return e=l,a=t.delListener,o(e)||a(e),L},schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(A,...t),await(async()=>{if(!v){for(v=1;!o((t=A,p=t.shift()));)try{await p()}catch{}v=0}var t})(),L),getStore:()=>t,destroy:()=>L.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return u(L)})(t,(async()=>n(await a.readFile(i,s))))},"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("fs"),require("fs/promises")):"function"==typeof define&&define.amd?define(["exports","fs","fs/promises"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterFile={},t.fs,t["fs/promises"]);
