var t,e;t=this,e=function(t,e,a){"use strict";const s="utf8",n=t=>null==t,o=(t,e,a)=>n(t)?a?.():e(t),i=Object,r=t=>i.getPrototypeOf(t),c=i.keys,y=i.freeze,f=t=>(t=>!n(t)&&o(r(t),(t=>t==i.prototype||n(r(t))),(()=>!0)))(t)&&0==(t=>c(t).length)(t),d=JSON.parse,u=t=>new Map(t),l=(t,e)=>t?.get(e),p=(t,e,a)=>{return n(a)?(s=t,o=e,s?.delete(o),t):t?.set(e,a);var s,o},h=(t,e,a)=>{var s,n;return s=t,n=e,s?.has(n)||p(t,e,a()),l(t,e)},w=u(),v=u();t.createFilePersister=(t,r,c)=>((t,e,a,s,i,r,[c,d]=[],u=[])=>{let g,A,S,m=0,F=0;h(w,u,(()=>0)),h(v,u,(()=>[]));const L=async t=>(2!=m&&(m=1,await C.schedule((async()=>{await t(),m=0}))),C),C={load:async(a,s)=>await L((async()=>{try{t.setContent(await e())}catch{t.setContent([a,s])}})),startAutoLoad:async(a={},n={})=>(C.stopAutoLoad(),await C.load(a,n),F=1,S=s((async(a,s)=>{if(s){const e=s();await L((async()=>t.setTransactionChanges(e)))}else await L((async()=>{try{t.setContent(a?.()??await e())}catch(t){r?.(t)}}))})),C),stopAutoLoad:()=>(F&&(i(S),S=void 0,F=0),C),save:async e=>(1!=m&&(m=2,await C.schedule((async()=>{try{await a(t.getContent,e)}catch(t){r?.(t)}m=0}))),C),startAutoSave:async()=>(await C.stopAutoSave().save(),g=t.addDidFinishTransactionListener(((t,e)=>{const[a,s]=e();f(a)&&f(s)||C.save((()=>[a,s]))})),C),stopAutoSave:()=>(o(g,t.delListener),g=void 0,C),schedule:async(...t)=>(((t,...e)=>{t.push(...e)})(l(v,u),...t),await(async()=>{if(!l(w,u)){for(p(w,u,1);!n((t=l(v,u),A=t.shift()));)try{await A()}catch(t){r?.(t)}p(w,u,0)}var t})(),C),getStore:()=>t,destroy:()=>C.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return c&&(C[c]=()=>d),y(C)})(t,(async()=>d(await a.readFile(r,s))),(async t=>{return await a.writeFile(r,(e=t(),JSON.stringify(e,((t,e)=>e instanceof Map?i.fromEntries([...e]):e))),s);var e}),(t=>e.watch(r,(()=>t()))),(t=>t?.close()),c,["getFilePath",r])},"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("fs"),require("fs/promises")):"function"==typeof define&&define.amd?define(["exports","fs","fs/promises"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisterFile={},t.fs,t["fs/promises"]);
