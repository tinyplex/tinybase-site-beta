var t,a;t=this,a=function(t){"use strict";const a=t=>null==t,e=Object.freeze;t.createCustomPersister=(t,s,o,n,i)=>{let c,r,d,u=0,y=0,f=0;const l=[],p=async t=>{2!=u&&(u=1,await t(),u=0)},h={load:async(a,e)=>(await p((async()=>{try{t.setContent(await s())}catch{t.setContent([a,e])}})),h),startAutoLoad:async(a={},e={})=>(h.stopAutoLoad(),await h.load(a,e),f=1,d=n((async(a,e)=>{await p((async()=>{if(e)t.setTransactionChanges(e());else try{t.setContent(a?.()??await s())}catch{}}))})),h),stopAutoLoad:()=>(f&&(i(d),d=void 0,f=0),h),save:async a=>(await h.schedule((async()=>{if(1!=u){u=2;try{await o(t.getContent,a)}catch{}u=0}})),h),startAutoSave:async()=>(await h.stopAutoSave().save(),c=t.addDidFinishTransactionListener(((t,a)=>{const e=a();h.save((()=>e))})),h),stopAutoSave:()=>{var e,s;return e=c,s=t.delListener,a(e)||s(e),h},schedule:async(...t)=>(((t,...a)=>{t.push(...a)})(l,...t),await(async()=>{if(!y){for(y=1;!a((t=l,r=t.shift()));)try{await r()}catch{}y=0}var t})(),h),getStore:()=>t,destroy:()=>h.stopAutoLoad().stopAutoSave(),getStats:()=>({})};return e(h)}},"object"==typeof exports&&"undefined"!=typeof module?a(exports):"function"==typeof define&&define.amd?define(["exports"],a):a((t="undefined"!=typeof globalThis?globalThis:t||self).TinyBasePersisters={});
